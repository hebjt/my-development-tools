<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.tanghsk.mock.admin.right.mapper.ExamResourceMapper" >
  <resultMap id="BaseResultMap" type="resource" >
    <id column="res_id" property="resId" jdbcType="VARCHAR" />
    <result column="res_type" property="resType" jdbcType="VARCHAR" />
    <result column="res_value" property="resValue" jdbcType="VARCHAR" />
    <result column="res_desc" property="resDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    res_id, res_type, res_value, res_desc
  </sql>
  <!-- 获取某个权限的所有资源列表 -->
  <select id="getAllResource" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select a.*
    from exam_resource a inner join exam_admin_to_right b on a.res_id=b.res_id 
    inner join exam_right c on b.right_id=c.right_id
    where c.right_id=#{rightId}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from exam_resource
    where res_id = #{resId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true" >
    delete from exam_resource
    where res_id = #{resId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="resource" flushCache="true" >
    insert into exam_resource (res_id, res_type, res_value, 
      res_desc)
    values (#{resId,jdbcType=VARCHAR}, #{resType,jdbcType=VARCHAR}, #{resValue,jdbcType=VARCHAR}, 
      #{resDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="resource" flushCache="true" >
    insert into exam_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      res_id,
      res_type,
      res_value,
      res_desc,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{resId,jdbcType=VARCHAR},
      #{resType,jdbcType=VARCHAR},
      #{resValue,jdbcType=VARCHAR},
      #{resDesc,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="resource" flushCache="true" >
    update exam_resource
    <set >
      <if test="resType != null" >
        res_type = #{resType,jdbcType=VARCHAR},
      </if>
      <if test="resValue != null" >
        res_value = #{resValue,jdbcType=VARCHAR},
      </if>
      <if test="resDesc != null" >
        res_desc = #{resDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where res_id = #{resId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="resource" flushCache="true" >
    update exam_resource
    set res_type = #{resType,jdbcType=VARCHAR},
      res_value = #{resValue,jdbcType=VARCHAR},
      res_desc = #{resDesc,jdbcType=VARCHAR}
    where res_id = #{resId,jdbcType=VARCHAR}
  </update>
</mapper>