<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.tanghsk.mock.admin.right.mapper.ExamRightMapper" >
  <resultMap id="BaseResultMap" type="right" >
    <id column="right_id" property="rightId" jdbcType="VARCHAR" />
    <result column="right_name" property="rightName" jdbcType="VARCHAR" />
    <result column="right_desc" property="rightDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    right_id, right_name, right_desc
  </sql>
  <!-- 加载所有权限 -->
  <select id="loadListPageAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam_right
  </select>
  <!-- 获得某个用户的所有权限 -->
  <select id="loadListPageAll" resultType="list" parameterType="map">
    SELECT m.right_id    
    from 
    (select distinct f.right_id
    from exam_user a 
    inner join exam_adminstrator   b on a.user_id =b.user_id
    inner join exam_admin_to_right c on b.admin_id=c.admin_id
    inner join exam_admin_to_role  d on b.admin_id=d.admin_id
    inner join exam_role_to_right  e on e.role_id =d.role_id
    inner join exam_right          f on f.right_id=c.right_id
    where a.user_name=#{username0}        
    union     
    select distinct e.right_id
    from exam_user a 
    inner join exam_adminstrator   b on a.user_id =b.user_id
    inner join exam_admin_to_right c on b.admin_id=c.admin_id
    inner join exam_admin_to_role  d on b.admin_id=d.admin_id
    inner join exam_role_to_right  e on e.role_id =d.role_id
    inner join exam_right          f on f.right_id=c.right_id
    where a.user_name=#{username1) m    
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from exam_right
    where right_id = #{rightId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true" >
    delete from exam_right
    where right_id = #{rightId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="right" flushCache="true" >
    insert into exam_right (right_id, right_name, right_desc
      )
    values (#{rightId,jdbcType=VARCHAR}, #{rightName,jdbcType=VARCHAR}, #{rightDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="right" flushCache="true" >
    insert into exam_right
    <trim prefix="(" suffix=")" suffixOverrides="," >
      right_id,
      right_name,
      right_desc,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{rightId,jdbcType=VARCHAR},
      #{rightName,jdbcType=VARCHAR},
      #{rightDesc,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="right" flushCache="true" >
    update exam_right
    <set >
      <if test="rightName != null" >
        right_name = #{rightName,jdbcType=VARCHAR},
      </if>
      <if test="rightDesc != null" >
        right_desc = #{rightDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where right_id = #{rightId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="right" flushCache="true" >
    update exam_right
    set right_name = #{rightName,jdbcType=VARCHAR},
      right_desc = #{rightDesc,jdbcType=VARCHAR}
    where right_id = #{rightId,jdbcType=VARCHAR}
  </update>
</mapper>