<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.tanghsk.mock.admin.user.mapper.ExamAdminstratorMapper" >
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" />
  <resultMap id="BaseResultMap" type="com.tanghsk.mock.admin.exam.domain.ExamAdminstrator" >
    <id column="admin_id" property="adminId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="admin_title" property="adminTitle" jdbcType="VARCHAR" />
    <result column="admin_remark" property="adminRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    admin_id, user_id, admin_title, admin_remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from exam_adminstrator
    where admin_id = #{adminId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true" >
    delete from exam_adminstrator
    where admin_id = #{adminId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tanghsk.mock.admin.exam.domain.ExamAdminstrator" flushCache="true" >
    insert into exam_adminstrator (admin_id, user_id, admin_title, 
      admin_remark)
    values (#{adminId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{adminTitle,jdbcType=VARCHAR}, 
      #{adminRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tanghsk.mock.admin.exam.domain.ExamAdminstrator" flushCache="true" >
    insert into exam_adminstrator
    <trim prefix="(" suffix=")" suffixOverrides="," >
      admin_id,
      user_id,
      admin_title,
      admin_remark,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{adminId,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR},
      #{adminTitle,jdbcType=VARCHAR},
      #{adminRemark,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tanghsk.mock.admin.exam.domain.ExamAdminstrator" flushCache="true" >
    update exam_adminstrator
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="adminTitle != null" >
        admin_title = #{adminTitle,jdbcType=VARCHAR},
      </if>
      <if test="adminRemark != null" >
        admin_remark = #{adminRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tanghsk.mock.admin.exam.domain.ExamAdminstrator" flushCache="true" >
    update exam_adminstrator
    set user_id = #{userId,jdbcType=VARCHAR},
      admin_title = #{adminTitle,jdbcType=VARCHAR},
      admin_remark = #{adminRemark,jdbcType=VARCHAR}
    where admin_id = #{adminId,jdbcType=VARCHAR}
  </update>
</mapper>