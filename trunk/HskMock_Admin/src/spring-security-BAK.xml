<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<!--登录页面不过滤 -->
	<http auto-config="true">
		<form-login/>
		<!--访问/admin.jsp资源的用户必须具有ROLE_ADMIN的权限 -->
		<intercept-url pattern="/examPaper/**" access="ROLE_ADMIN"/>
		<!--访问/**资源的用户必须具有ROLE_USER的权限 -->
		<intercept-url pattern="/**" access="ROLE_USER"/>

		<!-- Uncomment to limit the number of sessions a user can have -->
		<session-management invalid-session-url="/timeout.jsp">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
		<!-- 增加一个自定义的filter，放在FILTER_SECURITY_INTERCEPTOR之前， 实现用户、角色、权限、资源的数据库管理。 11/3/23 -->
		<custom-filter ref="customFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>


	<!-- 一个自定义的filter，必须包含authenticationManager, accessDecisionManager,securityMetadataSource三个属性。 
		11/3/23 -->
	<beans:bean id="customFilter"
		class="com.tanghsk.mock.admin.security.CustomFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="customAccessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="customSecurityMetadataSource" />
	</beans:bean>


	<!-- 注意能够为authentication-manager 设置alias别名 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailService">
		</authentication-provider>
	</authentication-manager>

	<!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
	<beans:bean id="customUserDetailService"
		class="com.tanghsk.mock.admin.security.CustomUserDetailsService" />


	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源。11/3/23 -->
	<beans:bean id="customAccessDecisionManager"
		class="com.tanghsk.mock.admin.security.CustomAccessDecisionManager">
	</beans:bean>


	<!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问。11/3/23 -->
	<beans:bean id="customSecurityMetadataSource"
		class="com.tanghsk.mock.admin.security.CustomInvocationSecurityMetadataSource">
	</beans:bean>

</beans:beans>