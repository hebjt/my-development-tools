--------------------------------------------------------
--  文件已创建 - 星期五-二月-25-2011   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence SEQ_ADDRESS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ADDRESS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DEPOSITSET
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_DEPOSITSET"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 51 CACHE 50 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GRADE
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GRADE"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 50 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_OPERATEHISTORY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_OPERATEHISTORY"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 50 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PHONE
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_PHONE"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 50 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table TWLSTORE
--------------------------------------------------------

  CREATE TABLE "TWLSTORE" 
   (	"ID" NUMBER(*,0), 
	"TYPE" NUMBER(*,0), 
	"HANDLE" NUMBER(*,0), 
	"RECORD" LONG RAW
   ) ;
--------------------------------------------------------
--  DDL for Table T_AFTERSRV_EXCHANGE
--------------------------------------------------------

  CREATE TABLE "T_AFTERSRV_EXCHANGE" 
   (	"ID" VARCHAR2(60), 
	"WORKORDERID" VARCHAR2(60), 
	"COMPANYID" VARCHAR2(60), 
	"USERID" VARCHAR2(60), 
	"USERNAME" VARCHAR2(20), 
	"USERADDRESS" VARCHAR2(100), 
	"USERPHONE" VARCHAR2(15), 
	"USERMOBILE" VARCHAR2(12), 
	"USERZIPCODE" VARCHAR2(6), 
	"INDATE" DATE, 
	"STATUS" CHAR(1), 
	"REMARK" VARCHAR2(1000), 
	"CHANGELOG" VARCHAR2(300)
   ) ;
 

   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."ID" IS '换货单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."WORKORDERID" IS '售后工单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."COMPANYID" IS '分公司编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."USERID" IS '客户编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."USERNAME" IS '收货人名称';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."USERADDRESS" IS '收货人地址';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."USERPHONE" IS '收货人电话';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."USERMOBILE" IS '收货人手机';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."USERZIPCODE" IS '收货人邮编';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."INDATE" IS '下单时间';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."STATUS" IS '状态';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."REMARK" IS '备注';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGE"."CHANGELOG" IS '异动记录';
 
   COMMENT ON TABLE "T_AFTERSRV_EXCHANGE"  IS '换货表';
--------------------------------------------------------
--  DDL for Table T_AFTERSRV_EXCHANGEGOODS
--------------------------------------------------------

  CREATE TABLE "T_AFTERSRV_EXCHANGEGOODS" 
   (	"EXCHANGEID" VARCHAR2(60), 
	"ORDERID" VARCHAR2(60), 
	"GOODSID" VARCHAR2(60), 
	"GOODSTYPE" CHAR(1), 
	"GOODSNAME" VARCHAR2(50), 
	"GOODSAMOUNT" NUMBER, 
	"ATTRIBUTE" VARCHAR2(200), 
	"REASONID" NUMBER, 
	"REMARK" VARCHAR2(1000)
   ) ;
 

   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."EXCHANGEID" IS '换货单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."ORDERID" IS '购买订单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."GOODSID" IS '商品编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."GOODSTYPE" IS '商品类型[0 原商品，1 更换商品]';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."GOODSNAME" IS '商品名称';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."GOODSAMOUNT" IS '商品数量';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."ATTRIBUTE" IS '商品属性';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."REASONID" IS '换货原因编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_EXCHANGEGOODS"."REMARK" IS '备注';
 
   COMMENT ON TABLE "T_AFTERSRV_EXCHANGEGOODS"  IS '换货商品表';
--------------------------------------------------------
--  DDL for Table T_AFTERSRV_RETURN
--------------------------------------------------------

  CREATE TABLE "T_AFTERSRV_RETURN" 
   (	"ID" VARCHAR2(60), 
	"WORKORDERID" VARCHAR2(60), 
	"COMPANYID" VARCHAR2(60), 
	"USERID" VARCHAR2(60), 
	"USERNAME" VARCHAR2(20), 
	"USERADDRESS" VARCHAR2(100), 
	"USERPHONE" VARCHAR2(15), 
	"USERMOBILE" VARCHAR2(12), 
	"USERZIPCODE" VARCHAR2(6), 
	"GOODSTOTALPRICE" NUMBER(11,2), 
	"INDATE" DATE, 
	"STATUS" CHAR(1), 
	"REMARK" VARCHAR2(1000), 
	"CHANGELOG" VARCHAR2(300)
   ) ;
 

   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."ID" IS '退货单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."WORKORDERID" IS '售后工单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."COMPANYID" IS '分公司编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."USERID" IS '客户编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."USERNAME" IS '收货人名称';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."USERADDRESS" IS '收货人地址';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."USERPHONE" IS '收货人电话';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."USERMOBILE" IS '收货人手机';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."USERZIPCODE" IS '收货人邮编';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."GOODSTOTALPRICE" IS '商品总金额';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."INDATE" IS '下单时间';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."STATUS" IS '状态';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."REMARK" IS '备注';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURN"."CHANGELOG" IS '异动记录';
 
   COMMENT ON TABLE "T_AFTERSRV_RETURN"  IS '退货表';
--------------------------------------------------------
--  DDL for Table T_AFTERSRV_RETURNGOODS
--------------------------------------------------------

  CREATE TABLE "T_AFTERSRV_RETURNGOODS" 
   (	"RETURNID" VARCHAR2(30), 
	"ORDERID" VARCHAR2(30), 
	"GOODSID" VARCHAR2(30), 
	"GOODSNAME" VARCHAR2(50), 
	"GOODSPRICE" NUMBER(11,2), 
	"BUYAMOUNT" NUMBER, 
	"SENDEDAMOUNT" NUMBER, 
	"RETURNAMOUNT" NUMBER, 
	"REASONID" NUMBER, 
	"ATTRIBUTE" VARCHAR2(200), 
	"REMARK" VARCHAR2(1000)
   ) ;
 

   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."RETURNID" IS '退货单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."ORDERID" IS '订单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."GOODSID" IS '商品编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."GOODSNAME" IS '商品名称';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."GOODSPRICE" IS '商品单价';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."BUYAMOUNT" IS '购买数量';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."SENDEDAMOUNT" IS '已发货数量';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."RETURNAMOUNT" IS '退货数量';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."REASONID" IS '退货原因编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."ATTRIBUTE" IS '商品属性';
 
   COMMENT ON COLUMN "T_AFTERSRV_RETURNGOODS"."REMARK" IS '备注';
 
   COMMENT ON TABLE "T_AFTERSRV_RETURNGOODS"  IS '退货商品表';
--------------------------------------------------------
--  DDL for Table T_AFTERSRV_WORKORDER
--------------------------------------------------------

  CREATE TABLE "T_AFTERSRV_WORKORDER" 
   (	"ID" VARCHAR2(60), 
	"TYPE" CHAR(1), 
	"USERID" VARCHAR2(60), 
	"COMPANYID" VARCHAR2(60), 
	"WORKERID" VARCHAR2(60), 
	"CONTENT" VARCHAR2(1000), 
	"EXPECTDATE" DATE, 
	"FINISHDATE" DATE, 
	"INDATE" DATE, 
	"STATUS" CHAR(1), 
	"PROGRESS" NUMBER, 
	"REMARK" VARCHAR2(1000)
   ) ;
 

   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."ID" IS '工单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."TYPE" IS '工单类型';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."USERID" IS '客户编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."COMPANYID" IS '分公司编码';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."WORKERID" IS '员工编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."CONTENT" IS '工单内容';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."EXPECTDATE" IS '希望解决日期';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."FINISHDATE" IS '完成日期';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."INDATE" IS '下单日期';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."STATUS" IS '状态[0未处理 1完成 2取消]';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."PROGRESS" IS '完成度';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDER"."REMARK" IS '备注';
 
   COMMENT ON TABLE "T_AFTERSRV_WORKORDER"  IS '售后工单表';
--------------------------------------------------------
--  DDL for Table T_AFTERSRV_WORKORDERLOG
--------------------------------------------------------

  CREATE TABLE "T_AFTERSRV_WORKORDERLOG" 
   (	"WORKORDERID" VARCHAR2(60), 
	"SENDER" VARCHAR2(60), 
	"RECEIVER" VARCHAR2(60), 
	"PREPROGRESS" NUMBER, 
	"CURPROGRESS" NUMBER, 
	"CONTENT" VARCHAR2(1000), 
	"INDATE" DATE
   ) ;
 

   COMMENT ON COLUMN "T_AFTERSRV_WORKORDERLOG"."WORKORDERID" IS '工单编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDERLOG"."SENDER" IS '发送人编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDERLOG"."RECEIVER" IS '接收人编号';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDERLOG"."PREPROGRESS" IS '原完成度';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDERLOG"."CURPROGRESS" IS '现完成度';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDERLOG"."CONTENT" IS '答复内容';
 
   COMMENT ON COLUMN "T_AFTERSRV_WORKORDERLOG"."INDATE" IS '操作时间';
 
   COMMENT ON TABLE "T_AFTERSRV_WORKORDERLOG"  IS '售后工单操作记录表';
--------------------------------------------------------
--  DDL for Table T_BASE_AREA
--------------------------------------------------------

  CREATE TABLE "T_BASE_AREA" 
   (	"AREAID" NUMBER, 
	"AREANAME" VARCHAR2(20), 
	"AREAGRADE" CHAR(1), 
	"PARENTID" NUMBER
   ) ;
 

   COMMENT ON COLUMN "T_BASE_AREA"."AREAID" IS '地区编号';
 
   COMMENT ON COLUMN "T_BASE_AREA"."AREANAME" IS '地区名称';
 
   COMMENT ON COLUMN "T_BASE_AREA"."AREAGRADE" IS '地区级别(0：省 1：市 2：区县)';
 
   COMMENT ON COLUMN "T_BASE_AREA"."PARENTID" IS '父级编号';
 
   COMMENT ON TABLE "T_BASE_AREA"  IS '地区设置';
--------------------------------------------------------
--  DDL for Table T_BASE_BANK
--------------------------------------------------------

  CREATE TABLE "T_BASE_BANK" 
   (	"BANKID" NUMBER, 
	"BANKNAME" VARCHAR2(30), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ENABLE ROW MOVEMENT ;
 

   COMMENT ON COLUMN "T_BASE_BANK"."BANKID" IS '银行编号';
 
   COMMENT ON COLUMN "T_BASE_BANK"."BANKNAME" IS '银行名称';
 
   COMMENT ON COLUMN "T_BASE_BANK"."STATUS" IS '1:正常 0:停用';
 
   COMMENT ON TABLE "T_BASE_BANK"  IS '开户银行';
--------------------------------------------------------
--  DDL for Table T_BASE_BILLTEMPLATE
--------------------------------------------------------

  CREATE TABLE "T_BASE_BILLTEMPLATE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(30), 
	"TYPE" VARCHAR2(20), 
	"UPLOADTIME" DATE
   ) ;
 

   COMMENT ON COLUMN "T_BASE_BILLTEMPLATE"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_BILLTEMPLATE"."NAME" IS '模板名称';
 
   COMMENT ON COLUMN "T_BASE_BILLTEMPLATE"."TYPE" IS '模板类型';
 
   COMMENT ON COLUMN "T_BASE_BILLTEMPLATE"."UPLOADTIME" IS '上传时间';
 
   COMMENT ON TABLE "T_BASE_BILLTEMPLATE"  IS '票据模板';
--------------------------------------------------------
--  DDL for Table T_BASE_CONTRACTTYPE
--------------------------------------------------------

  CREATE TABLE "T_BASE_CONTRACTTYPE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20)
   ) ;
 

   COMMENT ON COLUMN "T_BASE_CONTRACTTYPE"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_CONTRACTTYPE"."NAME" IS '名称';
 
   COMMENT ON TABLE "T_BASE_CONTRACTTYPE"  IS '合同类别';
--------------------------------------------------------
--  DDL for Table T_BASE_EXCHANGESTATUS
--------------------------------------------------------

  CREATE TABLE "T_BASE_EXCHANGESTATUS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_EXCHANGESTATUS"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_EXCHANGESTATUS"."NAME" IS '状态名称';
 
   COMMENT ON COLUMN "T_BASE_EXCHANGESTATUS"."STATUS" IS '1：正常 0：停用';
 
   COMMENT ON TABLE "T_BASE_EXCHANGESTATUS"  IS '换货单状态';
--------------------------------------------------------
--  DDL for Table T_BASE_EXPORTLOG
--------------------------------------------------------

  CREATE TABLE "T_BASE_EXPORTLOG" 
   (	"ID" NUMBER, 
	"EXPORTTIME" DATE, 
	"EXPORTPERSON" VARCHAR2(8), 
	"EXPORTTABLE" VARCHAR2(40), 
	"EXPORTDATATIME" DATE
   ) ;
 

   COMMENT ON COLUMN "T_BASE_EXPORTLOG"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_EXPORTLOG"."EXPORTTIME" IS '操作日期';
 
   COMMENT ON COLUMN "T_BASE_EXPORTLOG"."EXPORTPERSON" IS '操作人';
 
   COMMENT ON COLUMN "T_BASE_EXPORTLOG"."EXPORTTABLE" IS '导出表名';
 
   COMMENT ON COLUMN "T_BASE_EXPORTLOG"."EXPORTDATATIME" IS '导出数据截止日期';
 
   COMMENT ON TABLE "T_BASE_EXPORTLOG"  IS '历史数据导出记录';
--------------------------------------------------------
--  DDL for Table T_BASE_INTERFACETYPE
--------------------------------------------------------

  CREATE TABLE "T_BASE_INTERFACETYPE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_INTERFACETYPE"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_INTERFACETYPE"."NAME" IS '接口方式名称';
 
   COMMENT ON COLUMN "T_BASE_INTERFACETYPE"."STATUS" IS '是否可用 1：正常 0：停用';
 
   COMMENT ON TABLE "T_BASE_INTERFACETYPE"  IS '物流接口方式';
--------------------------------------------------------
--  DDL for Table T_BASE_LOGISTICLEVEL
--------------------------------------------------------

  CREATE TABLE "T_BASE_LOGISTICLEVEL" 
   (	"COMPANYID" VARCHAR2(20), 
	"LOGISTICID" VARCHAR2(20), 
	"POINT" NUMBER(6,2)
   ) ;
--------------------------------------------------------
--  DDL for Table T_BASE_LOGISTICSTATUS
--------------------------------------------------------

  CREATE TABLE "T_BASE_LOGISTICSTATUS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_LOGISTICSTATUS"."ID" IS ' 编号';
 
   COMMENT ON COLUMN "T_BASE_LOGISTICSTATUS"."NAME" IS '名称';
 
   COMMENT ON COLUMN "T_BASE_LOGISTICSTATUS"."STATUS" IS '1：正常 0：停用';
 
   COMMENT ON TABLE "T_BASE_LOGISTICSTATUS"  IS '物流单状态';
--------------------------------------------------------
--  DDL for Table T_BASE_LOGISTICTYPE
--------------------------------------------------------

  CREATE TABLE "T_BASE_LOGISTICTYPE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"PRICE" FLOAT(126), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_LOGISTICTYPE"."ID" IS '类型编号';
 
   COMMENT ON COLUMN "T_BASE_LOGISTICTYPE"."NAME" IS '配送类型名称';
 
   COMMENT ON COLUMN "T_BASE_LOGISTICTYPE"."PRICE" IS '物流价格';
 
   COMMENT ON COLUMN "T_BASE_LOGISTICTYPE"."STATUS" IS '是否可用1：正常 0 ：停用';
 
   COMMENT ON TABLE "T_BASE_LOGISTICTYPE"  IS '物流配送类型';
--------------------------------------------------------
--  DDL for Table T_BASE_MSG
--------------------------------------------------------

  CREATE TABLE "T_BASE_MSG" 
   (	"ID" NUMBER, 
	"SENDERCODE" VARCHAR2(8), 
	"RECEIVERCODE" VARCHAR2(8), 
	"SENDDATE" DATE, 
	"MSGTYPE" VARCHAR2(10), 
	"STATUS" CHAR(1) DEFAULT 0, 
	"CONTENT" VARCHAR2(100), 
	"MSGARG" VARCHAR2(30)
   ) ;
 

   COMMENT ON COLUMN "T_BASE_MSG"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_MSG"."SENDERCODE" IS '发送人编码';
 
   COMMENT ON COLUMN "T_BASE_MSG"."RECEIVERCODE" IS '介绍人编码';
 
   COMMENT ON COLUMN "T_BASE_MSG"."SENDDATE" IS '发送日期';
 
   COMMENT ON COLUMN "T_BASE_MSG"."MSGTYPE" IS '消息类型(用简拼 如 售后：SH， 客服：KF，物流：WL)';
 
   COMMENT ON COLUMN "T_BASE_MSG"."STATUS" IS '0：未发送 1：已发送 2：已接收';
 
   COMMENT ON COLUMN "T_BASE_MSG"."CONTENT" IS '消息内容';
 
   COMMENT ON COLUMN "T_BASE_MSG"."MSGARG" IS '消息参数 用于连接到相应页面';
 
   COMMENT ON TABLE "T_BASE_MSG"  IS '消息提醒';
--------------------------------------------------------
--  DDL for Table T_BASE_ORDERSTATUS
--------------------------------------------------------

  CREATE TABLE "T_BASE_ORDERSTATUS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"STATUS" CHAR(1) DEFAULT 1, 
	"TYPE" CHAR(1) DEFAULT 0
   ) ;
 

   COMMENT ON COLUMN "T_BASE_ORDERSTATUS"."ID" IS ' 编号';
 
   COMMENT ON COLUMN "T_BASE_ORDERSTATUS"."NAME" IS '名称';
 
   COMMENT ON COLUMN "T_BASE_ORDERSTATUS"."STATUS" IS '1：正常 0：停用';
 
   COMMENT ON COLUMN "T_BASE_ORDERSTATUS"."TYPE" IS '0：订单 1：退货 2：换货';
 
   COMMENT ON TABLE "T_BASE_ORDERSTATUS"  IS '销售订单状态';
--------------------------------------------------------
--  DDL for Table T_BASE_ORDERTYPE
--------------------------------------------------------

  CREATE TABLE "T_BASE_ORDERTYPE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_ORDERTYPE"."ID" IS '类型编号';
 
   COMMENT ON COLUMN "T_BASE_ORDERTYPE"."NAME" IS '订单类型';
 
   COMMENT ON COLUMN "T_BASE_ORDERTYPE"."STATUS" IS '是否可用1：可用 0：停用';
 
   COMMENT ON TABLE "T_BASE_ORDERTYPE"  IS '订单类型';
--------------------------------------------------------
--  DDL for Table T_BASE_PAYTYPE
--------------------------------------------------------

  CREATE TABLE "T_BASE_PAYTYPE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_PAYTYPE"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_PAYTYPE"."NAME" IS '名称';
 
   COMMENT ON COLUMN "T_BASE_PAYTYPE"."STATUS" IS '是否可用 1正常 0 停用';
 
   COMMENT ON TABLE "T_BASE_PAYTYPE"  IS '支付方式设置';
--------------------------------------------------------
--  DDL for Table T_BASE_REASON
--------------------------------------------------------

  CREATE TABLE "T_BASE_REASON" 
   (	"ID" NUMBER, 
	"REASON" VARCHAR2(30), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_REASON"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_REASON"."REASON" IS '原因';
 
   COMMENT ON COLUMN "T_BASE_REASON"."STATUS" IS '1：可用 0：不可用';
 
   COMMENT ON TABLE "T_BASE_REASON"  IS '退换货原因';
--------------------------------------------------------
--  DDL for Table T_BASE_RETURNSTATUS
--------------------------------------------------------

  CREATE TABLE "T_BASE_RETURNSTATUS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20), 
	"STATUS" CHAR(1) DEFAULT 1
   ) ;
 

   COMMENT ON COLUMN "T_BASE_RETURNSTATUS"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_RETURNSTATUS"."NAME" IS '状态名称';
 
   COMMENT ON COLUMN "T_BASE_RETURNSTATUS"."STATUS" IS '1：正常 0：停用';
 
   COMMENT ON TABLE "T_BASE_RETURNSTATUS"  IS '退货单状态';
--------------------------------------------------------
--  DDL for Table T_BASE_SUPPLIER
--------------------------------------------------------

  CREATE TABLE "T_BASE_SUPPLIER" 
   (	"SUPCODE" VARCHAR2(20), 
	"SUPNAME" VARCHAR2(20), 
	"TYPECODE" NUMBER, 
	"LEGALPERSON" VARCHAR2(10), 
	"TEL" VARCHAR2(15), 
	"FAX" VARCHAR2(15), 
	"EMAIL" VARCHAR2(30), 
	"WEBSITE" VARCHAR2(30), 
	"BANK" VARCHAR2(40), 
	"ACCOUNT" VARCHAR2(20), 
	"CREDITRANK" VARCHAR2(20), 
	"IMPORTANCE" VARCHAR2(20), 
	"ADDRESS" VARCHAR2(100), 
	"POSTCODE" VARCHAR2(6), 
	"STOPFLAG" CHAR(1) DEFAULT 1, 
	"REMARK" VARCHAR2(200)
   ) ;
 

   COMMENT ON COLUMN "T_BASE_SUPPLIER"."SUPCODE" IS '供应商编号';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."SUPNAME" IS '供应商名称';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."TYPECODE" IS '供应商类别';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."LEGALPERSON" IS '法人代表';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."TEL" IS '电话';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."FAX" IS '传真';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."EMAIL" IS '电子邮件';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."WEBSITE" IS '网址';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."BANK" IS '开户银行';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."ACCOUNT" IS '银行账号';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."CREDITRANK" IS '信用等级';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."IMPORTANCE" IS '重要程度';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."ADDRESS" IS '地址';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."POSTCODE" IS '邮编';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."STOPFLAG" IS '停用标志（1：正常 0：停用）';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIER"."REMARK" IS '备注';
 
   COMMENT ON TABLE "T_BASE_SUPPLIER"  IS '供应商信息表';
--------------------------------------------------------
--  DDL for Table T_BASE_SUPPLIERLEVEL
--------------------------------------------------------

  CREATE TABLE "T_BASE_SUPPLIERLEVEL" 
   (	"COMPANYID" VARCHAR2(20), 
	"SUPPLIERID" VARCHAR2(20), 
	"PRODUCTID" VARCHAR2(20), 
	"POINT" NUMBER(6,2)
   ) ;
 

   COMMENT ON COLUMN "T_BASE_SUPPLIERLEVEL"."COMPANYID" IS '分公司ID';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIERLEVEL"."SUPPLIERID" IS '供应商ID';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIERLEVEL"."PRODUCTID" IS '商品ID';
 
   COMMENT ON COLUMN "T_BASE_SUPPLIERLEVEL"."POINT" IS '权重';
 
   COMMENT ON TABLE "T_BASE_SUPPLIERLEVEL"  IS '供应商权重';
--------------------------------------------------------
--  DDL for Table T_BASE_SUPTYPE
--------------------------------------------------------

  CREATE TABLE "T_BASE_SUPTYPE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20)
   ) ;
 

   COMMENT ON COLUMN "T_BASE_SUPTYPE"."ID" IS '编号';
 
   COMMENT ON COLUMN "T_BASE_SUPTYPE"."NAME" IS '类别名称';
 
   COMMENT ON TABLE "T_BASE_SUPTYPE"  IS '供应商类别表（行业类别）';
--------------------------------------------------------
--  DDL for Table T_BASIC_EMP
--------------------------------------------------------

  CREATE TABLE "T_BASIC_EMP" 
   (	"EMPID" CHAR(32), 
	"USERID" CHAR(32), 
	"EMPNAME" NVARCHAR2(30), 
	"TEL" VARCHAR2(20), 
	"EMPTYPE" NUMBER(3,0), 
	"REMARK" NVARCHAR2(1000), 
	"CORPORATIONID" CHAR(32), 
	"DEPARTMENTID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_CLIENTMGR_ADDRESS
--------------------------------------------------------

  CREATE TABLE "T_CLIENTMGR_ADDRESS" 
   (	"ADDRESSID" NUMBER, 
	"CLIENTID" VARCHAR2(20), 
	"DEFAULTADDR" VARCHAR2(1), 
	"PROVINCE" VARCHAR2(50), 
	"CITY" VARCHAR2(50), 
	"BOROUGH" VARCHAR2(50), 
	"DETAILADDR" VARCHAR2(200)
   ) ;
--------------------------------------------------------
--  DDL for Table T_CLIENTMGR_DEPOSITSET
--------------------------------------------------------

  CREATE TABLE "T_CLIENTMGR_DEPOSITSET" 
   (	"DEPOSITID" NUMBER, 
	"DEPOSITTYPE" VARCHAR2(1), 
	"DEPOSITRATE" VARCHAR2(40)
   ) ;
--------------------------------------------------------
--  DDL for Table T_CLIENTMGR_GRADE
--------------------------------------------------------

  CREATE TABLE "T_CLIENTMGR_GRADE" 
   (	"GRADEID" VARCHAR2(10), 
	"GRADENAME" VARCHAR2(20), 
	"DISCOUNT" VARCHAR2(10), 
	"DEPOSITRANGE" VARCHAR2(20), 
	"DEPOSITDATE" VARCHAR2(20)
   ) ;
--------------------------------------------------------
--  DDL for Table T_CLIENTMGR_INFO
--------------------------------------------------------

  CREATE TABLE "T_CLIENTMGR_INFO" 
   (	"CLIENTID" VARCHAR2(20), 
	"CLIENTNAME" VARCHAR2(50), 
	"GRADEID" VARCHAR2(10), 
	"COMPANYID" VARCHAR2(20), 
	"CLIENTDEPOSIT" VARCHAR2(20), 
	"CLIENTSEX" VARCHAR2(1), 
	"ADDDATE" VARCHAR2(20), 
	"CLIENTBIRTHDAY" VARCHAR2(20), 
	"CLIENTSTATE" VARCHAR2(1), 
	"INVALIDATEDATE" VARCHAR2(20), 
	"CLIENTCOMPANY" VARCHAR2(100), 
	"CLIENTDUTY" VARCHAR2(100), 
	"CLIENTOCC" VARCHAR2(100), 
	"CERTTYPE" VARCHAR2(50), 
	"CERTNUMBER" VARCHAR2(50), 
	"POSTALCODE" VARCHAR2(10), 
	"TOTALCONSUME" NUMBER(12,3), 
	"REMARK" VARCHAR2(500)
   ) ;
--------------------------------------------------------
--  DDL for Table T_CLIENTMGR_OPERATEHISTORY
--------------------------------------------------------

  CREATE TABLE "T_CLIENTMGR_OPERATEHISTORY" 
   (	"OPERATEID" NUMBER, 
	"OPERATERID" VARCHAR2(10), 
	"OPERATERNAME" VARCHAR2(50), 
	"OPERATETIME" VARCHAR2(20), 
	"OPERATETYPE" VARCHAR2(20)
   ) ;
--------------------------------------------------------
--  DDL for Table T_CLIENTMGR_PHONE
--------------------------------------------------------

  CREATE TABLE "T_CLIENTMGR_PHONE" 
   (	"PHONEID" NUMBER, 
	"CLIENTID" VARCHAR2(20), 
	"PHONE" VARCHAR2(20), 
	"DEFAULTFLAG" VARCHAR2(1)
   ) ;
--------------------------------------------------------
--  DDL for Table T_FINANCINGMGR_ACCOUNT
--------------------------------------------------------

  CREATE TABLE "T_FINANCINGMGR_ACCOUNT" 
   (	"ACCOUNTNO" VARCHAR2(12), 
	"ORDERID" NUMBER(*,0), 
	"OUTORDERID" VARCHAR2(30), 
	"TYPE" VARCHAR2(1), 
	"COMPANYID" VARCHAR2(20), 
	"PAYMENTID" VARCHAR2(12), 
	"PAYMENTNAME" VARCHAR2(30), 
	"SUPPLIERCODE" VARCHAR2(12), 
	"SUPPLIERNAME" VARCHAR2(30), 
	"PRODUCTID" VARCHAR2(12), 
	"PRODUCTNAME" VARCHAR2(20), 
	"COUNTS" NUMBER(*,0), 
	"PRICE" NUMBER(11,2), 
	"COMMISION" NUMBER(11,2), 
	"STATUS" VARCHAR2(1) DEFAULT 0, 
	"ACCOUNTDATE" VARCHAR2(10), 
	"PEOPLE" VARCHAR2(20), 
	"AMOUNT" NUMBER(11,2), 
	"VERIFYSTATUS" VARCHAR2(1) DEFAULT 0, 
	"VERIFYPEOPLE" VARCHAR2(20), 
	"VERIFYDATE" VARCHAR2(10), 
	"CREATEDATE" VARCHAR2(10)
   ) ;
 

   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."ACCOUNTNO" IS '出账单号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."ORDERID" IS '所属订单号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."OUTORDERID" IS '委外订单号t_outorder';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."TYPE" IS '账单类型 1：货款；2：物流费；3：退货';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."COMPANYID" IS '分公司编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."PAYMENTID" IS '收款公司编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."PAYMENTNAME" IS '收款公司名称';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."SUPPLIERCODE" IS '供应商编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."SUPPLIERNAME" IS '供应商名称';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."PRODUCTID" IS '商品编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."PRODUCTNAME" IS '商品名称';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."COUNTS" IS '数量';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."PRICE" IS '金额';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."COMMISION" IS '盈利（提成）';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."STATUS" IS '出账状态0:未入账(默认值) 1：已出账';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."ACCOUNTDATE" IS '出账日期';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."PEOPLE" IS '出账人';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."AMOUNT" IS '出账金额';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."VERIFYSTATUS" IS '审核状态0:默认值，未审核 1：已审核';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."VERIFYPEOPLE" IS '审核人';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."VERIFYDATE" IS '审核日期';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_ACCOUNT"."CREATEDATE" IS '创建日期';
 
   COMMENT ON TABLE "T_FINANCINGMGR_ACCOUNT"  IS '出账单表';
--------------------------------------------------------
--  DDL for Table T_FINANCINGMGR_RECORDED
--------------------------------------------------------

  CREATE TABLE "T_FINANCINGMGR_RECORDED" 
   (	"RECORDEDNO" VARCHAR2(12), 
	"ORDERID" NUMBER(*,0), 
	"OUTORDERID" VARCHAR2(30), 
	"TYPE" VARCHAR2(1), 
	"COMPANYID" VARCHAR2(20), 
	"PAYMENTID" VARCHAR2(12), 
	"PAYMENTNAME" VARCHAR2(30), 
	"SUPPLIERCODE" VARCHAR2(12), 
	"SUPPLIERNAME" VARCHAR2(30), 
	"PRODUCTID" VARCHAR2(12), 
	"PRODUCTNAME" VARCHAR2(20), 
	"COUNTS" NUMBER(*,0), 
	"PRICE" NUMBER(11,2), 
	"COMMISION" NUMBER(11,2), 
	"STATUS" VARCHAR2(1) DEFAULT 0, 
	"RECORDEDDATE" VARCHAR2(10), 
	"PEOPLE" VARCHAR2(20), 
	"AMOUNT" NUMBER(11,2), 
	"CREATEDATE" VARCHAR2(10)
   ) ;
 

   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."RECORDEDNO" IS '入账单号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."ORDERID" IS '所属订单号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."OUTORDERID" IS '委外订单号t_outorder';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."TYPE" IS '账单类型 1：货款；2：物流费；3：退货';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."COMPANYID" IS '分公司编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."PAYMENTID" IS '付款公司编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."PAYMENTNAME" IS '付款公司名称';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."SUPPLIERCODE" IS '供应商编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."SUPPLIERNAME" IS '供应商名称';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."PRODUCTID" IS '商品编号';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."PRODUCTNAME" IS '商品名称';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."COUNTS" IS '数量';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."PRICE" IS '金额';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."COMMISION" IS '盈利（提成）';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."STATUS" IS '入账状态0:未入账(默认值) 1：已入账';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."RECORDEDDATE" IS '入账日期';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."PEOPLE" IS '入账人';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."AMOUNT" IS '入账金额';
 
   COMMENT ON COLUMN "T_FINANCINGMGR_RECORDED"."CREATEDATE" IS '创建日期';
 
   COMMENT ON TABLE "T_FINANCINGMGR_RECORDED"  IS '入账单表';
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_INTERFACE
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_INTERFACE" 
   (	"ID" VARCHAR2(20), 
	"COMPANYID" VARCHAR2(20), 
	"SUPPLIERID" VARCHAR2(20), 
	"LOGISTICID" VARCHAR2(20), 
	"TYPE" CHAR(1), 
	"URL" VARCHAR2(200)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_LOGISTIC
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_LOGISTIC" 
   (	"ID" VARCHAR2(20), 
	"COMPANYID" VARCHAR2(20), 
	"TYPE" CHAR(1), 
	"NAME" VARCHAR2(200), 
	"LEGAL" VARCHAR2(20), 
	"NUM" NUMBER(*,0), 
	"TEL" VARCHAR2(20), 
	"PERSON" VARCHAR2(20), 
	"PROVINCE" NUMBER(*,0), 
	"CITY" NUMBER(*,0), 
	"AREA" NUMBER(*,0), 
	"ADDRESS" VARCHAR2(200), 
	"BANK" CHAR(1), 
	"ACCOUNT" VARCHAR2(20), 
	"AMOUNT" NUMBER(11,2), 
	"UNIT" CHAR(1), 
	"PROJECT" VARCHAR2(200), 
	"TERMS" VARCHAR2(200), 
	"STATUS" CHAR(1), 
	"SUPPLIERID" VARCHAR2(20), 
	"SUPPLIERNAME" VARCHAR2(200)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_LOGISTICORDER
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_LOGISTICORDER" 
   (	"ID" VARCHAR2(30), 
	"COMPANYID" VARCHAR2(20), 
	"ORDERTYPE" CHAR(1), 
	"ORDERID" VARCHAR2(20), 
	"OUTORDERID" VARCHAR2(30), 
	"CREATEDATE" VARCHAR2(20), 
	"OLDID" VARCHAR2(30), 
	"IDFROMLOGISTIC" VARCHAR2(40), 
	"OLDIDFROMLOGISTIC" VARCHAR2(40), 
	"LOGISTICID" VARCHAR2(20), 
	"LOGISTICNAME" VARCHAR2(200), 
	"STATUS" CHAR(1), 
	"ARRIVEDATE" VARCHAR2(20), 
	"INSURED" CHAR(1), 
	"INSUREDCOST" NUMBER(11,2), 
	"TOTALAMOUNT" NUMBER(11,2), 
	"COST" NUMBER(11,2), 
	"TYPE" CHAR(1)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_OUTEORDER
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_OUTEORDER" 
   (	"ID" VARCHAR2(30), 
	"COMPANYID" VARCHAR2(20), 
	"ORDERID" VARCHAR2(20), 
	"OLDORDERID" VARCHAR2(30), 
	"CREATEDATE" VARCHAR2(20), 
	"OLDID" VARCHAR2(20), 
	"REASON" CHAR(1), 
	"INSURED" CHAR(1), 
	"IDFROMSUPPLIER" VARCHAR2(40), 
	"OLDIDFROMSUPPLIER" VARCHAR2(40), 
	"SUPPLIERID" VARCHAR2(20), 
	"SUPPLIERNAME" VARCHAR2(200), 
	"STATUS" CHAR(1), 
	"AMOUNT" NUMBER(11,2), 
	"COST" NUMBER(11,2)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_OUTEORDER_DETAIL
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_OUTEORDER_DETAIL" 
   (	"OUTORDERID" VARCHAR2(30), 
	"ORDERID" VARCHAR2(20), 
	"PRODUCTID" VARCHAR2(20), 
	"NUM" NUMBER(*,0), 
	"TYPE" CHAR(1)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_OUTORDER
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_OUTORDER" 
   (	"ID" VARCHAR2(30), 
	"COMPANYID" VARCHAR2(20), 
	"ORDERID" VARCHAR2(20), 
	"CREATEDATE" VARCHAR2(20), 
	"IDFROMSUPPLIER" VARCHAR2(40), 
	"SUPPLIERID" VARCHAR2(20), 
	"SUPPLIERNAME" VARCHAR2(200), 
	"STATUS" CHAR(1), 
	"AMOUNT" NUMBER(11,2), 
	"COST" NUMBER(11,2), 
	"NEEDINVOICE" CHAR(1)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_OUTORDER_DETAIL
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_OUTORDER_DETAIL" 
   (	"OUTORDERID" VARCHAR2(30), 
	"ORDERID" VARCHAR2(20), 
	"PRODUCTID" VARCHAR2(20), 
	"NUM" NUMBER(*,0)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_OUTRORDER
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_OUTRORDER" 
   (	"ID" VARCHAR2(30), 
	"COMPANYID" VARCHAR2(20), 
	"ORDERID" VARCHAR2(20), 
	"OLDORDERID" VARCHAR2(20), 
	"CREATEDATE" VARCHAR2(20), 
	"OLDID" VARCHAR2(30), 
	"REASON" CHAR(1), 
	"INSURED" CHAR(1), 
	"IDFROMSUPPLIER" VARCHAR2(40), 
	"OLDIDFROMSUPPLIER" VARCHAR2(40), 
	"SUPPLIERID" VARCHAR2(20), 
	"SUPPLIERNAME" VARCHAR2(200), 
	"STATUS" CHAR(1), 
	"AMOUNT" NUMBER(11,2), 
	"COST" NUMBER(11,2)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_OUTRORDER_DETAIL
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_OUTRORDER_DETAIL" 
   (	"OUTORDERID" VARCHAR2(30), 
	"ORDERID" VARCHAR2(20), 
	"PRODUCTID" VARCHAR2(20), 
	"NUM" NUMBER(*,0)
   ) ;
--------------------------------------------------------
--  DDL for Table T_LOGISTICMGR_SCOPE
--------------------------------------------------------

  CREATE TABLE "T_LOGISTICMGR_SCOPE" 
   (	"ID" VARCHAR2(20), 
	"LOGISTICID" VARCHAR2(20), 
	"PROVINCE" NUMBER(*,0), 
	"CITY" NUMBER(*,0), 
	"AREA" NUMBER(*,0), 
	"FLAG" CHAR(1)
   ) ;
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_AREACONTRACTLINK
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_AREACONTRACTLINK" 
   (	"ACL_CODE" VARCHAR2(20), 
	"C_CODE" VARCHAR2(20), 
	"ACL_AREA" VARCHAR2(150), 
	"ACL_REMARK" VARCHAR2(255)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_AREACONTRACTLINK"."ACL_CODE" IS '范围联系编号';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_AREACONTRACTLINK"."C_CODE" IS '合同编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_AREACONTRACTLINK"."ACL_AREA" IS '供货范围';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_AREACONTRACTLINK"."ACL_REMARK" IS '备注';
 
   COMMENT ON TABLE "T_PRODUCTMGR_AREACONTRACTLINK"  IS '供货范围-合同联系表';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_DELIVERY
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_DELIVERY" 
   (	"D_CODE" VARCHAR2(20), 
	"D_PROVINCE" VARCHAR2(20), 
	"D_CITY" VARCHAR2(20), 
	"D_STATE" VARCHAR2(20), 
	"D_AREA" VARCHAR2(255), 
	"D_PARENT" VARCHAR2(20), 
	"D_SUMARY" VARCHAR2(255)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_DELIVERY"."D_CODE" IS '供货范围编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DELIVERY"."D_PROVINCE" IS '省区地址';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DELIVERY"."D_CITY" IS '城市地址';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DELIVERY"."D_STATE" IS '县区地址';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DELIVERY"."D_AREA" IS '供货地区';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DELIVERY"."D_PARENT" IS '父属区域，0 为最高';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DELIVERY"."D_SUMARY" IS '详细描述';
 
   COMMENT ON TABLE "T_PRODUCTMGR_DELIVERY"  IS '供货范围表';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_DEPTMENT
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_DEPTMENT" 
   (	"DEPT_CODE" VARCHAR2(20), 
	"DEPT_NAME" VARCHAR2(20), 
	"DEPT_ADDR" VARCHAR2(255), 
	"DEPT_PHONE" VARCHAR2(20), 
	"DEPT_PERSON" VARCHAR2(20), 
	"DEPT_MOBILE" VARCHAR2(20), 
	"DEPT_REMARK" VARCHAR2(255), 
	"DEPT_AREA" VARCHAR2(20)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_CODE" IS '分公司编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_NAME" IS '分公司名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_ADDR" IS '分公司地址';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_PHONE" IS '联系电话';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_PERSON" IS '主要负责人';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_MOBILE" IS '负责人联系电话';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_REMARK" IS '备注';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENT"."DEPT_AREA" IS '分公司所属区域';
 
   COMMENT ON TABLE "T_PRODUCTMGR_DEPTMENT"  IS '分公司表';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_DEPTMENTLINK
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_DEPTMENTLINK" 
   (	"DEPT_CODE" CHAR(32), 
	"C_CODE" VARCHAR2(20)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENTLINK"."DEPT_CODE" IS '分公司编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_DEPTMENTLINK"."C_CODE" IS '合同编码';
 
   COMMENT ON TABLE "T_PRODUCTMGR_DEPTMENTLINK"  IS '分公司合同联系表';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_PRODUCTS
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_PRODUCTS" 
   (	"P_CODE" VARCHAR2(12), 
	"SORT_CODE" VARCHAR2(12), 
	"P_NAME" VARCHAR2(20), 
	"P_ZHONGLIANG" VARCHAR2(20), 
	"P_JILIANG" VARCHAR2(20), 
	"P_TYPE" VARCHAR2(20), 
	"P_ORDER" NUMBER(11,0), 
	"P_PRICE1" NUMBER(11,2), 
	"P_PRICE2" NUMBER(11,2), 
	"P_PRICE3" NUMBER(11,2), 
	"P_PRICE4" NUMBER(11,2), 
	"P_PRICE5" NUMBER(11,2), 
	"P_PRICE6" NUMBER(11,2), 
	"P_REM1" NUMBER(1,0), 
	"P_REM2" NUMBER(1,0), 
	"P_IMG1" VARCHAR2(150), 
	"P_IMG2" VARCHAR2(150), 
	"P_IMG3" VARCHAR2(150), 
	"P_IMG4" VARCHAR2(150), 
	"P_IMG5" VARCHAR2(150), 
	"P_IMG6" VARCHAR2(150), 
	"P_VIDEO" VARCHAR2(150), 
	"P_SUMMARY" VARCHAR2(255)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_CODE" IS '商品编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."SORT_CODE" IS '类别编号';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_NAME" IS '商品名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_ZHONGLIANG" IS '重量单位';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_JILIANG" IS '计量单位';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_TYPE" IS '商品规格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_ORDER" IS '商品排序号';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_PRICE1" IS '销售价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_PRICE2" IS '市场售价';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_PRICE3" IS '网购价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_PRICE4" IS '促销价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_PRICE5" IS '会员价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_PRICE6" IS '商品优惠价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_REM1" IS '超级特价推荐';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_REM2" IS '最新商品推进啊';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_IMG1" IS '商品图片';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_VIDEO" IS '商品视频';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTS"."P_SUMMARY" IS '商品描述';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_PRODUCTSHOW
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_PRODUCTSHOW" 
   (	"PSH_ID" VARCHAR2(20), 
	"SORT_CODE" VARCHAR2(12), 
	"P_CODE" VARCHAR2(12), 
	"PSH_PRICE1" NUMBER(11,2), 
	"PSH_PRICE2" NUMBER(11,2), 
	"PSH_STARTTIME" DATE, 
	"PSH_ENDTIME" DATE, 
	"PSH_PRICE3" NUMBER(11,2), 
	"PSH_NUM" NUMBER(9,0), 
	"PSH_PRICE4" NUMBER(11,2), 
	"PSH_PRICE5" NUMBER(11,2), 
	"PSH_PRICE6" NUMBER(11,2), 
	"PSH_DESC" VARCHAR2(255), 
	"PSH_ORDER" NUMBER(11,0), 
	"PSH_IMG1" VARCHAR2(150), 
	"PSH_IMG2" VARCHAR2(150), 
	"PSH_IMG3" VARCHAR2(150), 
	"PSH_VIDEO" VARCHAR2(150), 
	"DEPT_CODE" VARCHAR2(20), 
	"PSH_REM1" NUMBER(1,0), 
	"PSH_REM2" NUMBER(1,0), 
	"PSH_REM3" NUMBER(1,0)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_ID" IS '商品序号';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."SORT_CODE" IS '类别编号';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."P_CODE" IS '商品编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_PRICE1" IS '销售价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_PRICE2" IS '市场售价';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_STARTTIME" IS '促销开始时间';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_ENDTIME" IS '促销结束时间';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_PRICE3" IS '商品优惠价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_NUM" IS '优惠数量';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_PRICE4" IS '网购价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_PRICE5" IS '促销价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_PRICE6" IS '会员价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_DESC" IS '描述';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_ORDER" IS '排序';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_IMG1" IS '商品图片';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_VIDEO" IS '广告视频';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."DEPT_CODE" IS '分公司编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_REM1" IS '超级特价推荐方式，1 推荐 0 不推荐';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_REM2" IS '最新商品推荐方式，1 推荐 0 不推荐';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PRODUCTSHOW"."PSH_REM3" IS '是否促销';
 
   COMMENT ON TABLE "T_PRODUCTMGR_PRODUCTSHOW"  IS '商品展示表';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_PROPERTY
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_PROPERTY" 
   (	"PROPERTY_CODE" VARCHAR2(12), 
	"PROPERTY_NAME" VARCHAR2(20), 
	"PROPERTY_SORT" NUMBER(1,0), 
	"PROPERTY_REMARK" VARCHAR2(255), 
	"PROPERTY_LEAF" NUMBER(1,0)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTY"."PROPERTY_CODE" IS '属性类别编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTY"."PROPERTY_NAME" IS '属性类别名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTY"."PROPERTY_SORT" IS '属性值的属性，单选 or 多选';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTY"."PROPERTY_REMARK" IS '备注';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTY"."PROPERTY_LEAF" IS '是否叶子结点';
 
   COMMENT ON TABLE "T_PRODUCTMGR_PROPERTY"  IS '商品属性类别表';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_PROPERTYLINK
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_PROPERTYLINK" 
   (	"SORT_CODE" VARCHAR2(12), 
	"PROPERTY_CODE" VARCHAR2(12)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYLINK"."SORT_CODE" IS '类别编号';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYLINK"."PROPERTY_CODE" IS '属性类别编码';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_PROPERTYVALUELINK
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_PROPERTYVALUELINK" 
   (	"P_CODE" VARCHAR2(12), 
	"PV_CODE" VARCHAR2(12)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYVALUELINK"."P_CODE" IS '商品编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYVALUELINK"."PV_CODE" IS '属性值编码';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_PROPERTYVALUES
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_PROPERTYVALUES" 
   (	"PV_CODE" VARCHAR2(12), 
	"PROPERTY_CODE" VARCHAR2(12), 
	"PV_NAME" VARCHAR2(20), 
	"PV_REMARK" VARCHAR2(255), 
	"PV_PCODE" VARCHAR2(12)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYVALUES"."PV_CODE" IS '属性值编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYVALUES"."PROPERTY_CODE" IS '属性类别编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYVALUES"."PV_NAME" IS '属性值名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYVALUES"."PV_REMARK" IS '备注';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_PROPERTYVALUES"."PV_PCODE" IS '父属性编码';
 
   COMMENT ON TABLE "T_PRODUCTMGR_PROPERTYVALUES"  IS '商品属性值明细表';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_SORTS
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_SORTS" 
   (	"SORT_CODE" VARCHAR2(12), 
	"SORT_NAME" VARCHAR2(20), 
	"SORT_PARENTCODE" VARCHAR2(12), 
	"SORT_IMG" VARCHAR2(150), 
	"SORT_SUMARY" VARCHAR2(255), 
	"SORT_LEAF" NUMBER(1,0)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_SORTS"."SORT_CODE" IS '类别编号';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SORTS"."SORT_NAME" IS '类别名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SORTS"."SORT_PARENTCODE" IS '父类别';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SORTS"."SORT_IMG" IS '类别图片';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SORTS"."SORT_SUMARY" IS '类别说明';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SORTS"."SORT_LEAF" IS '是否叶子结点';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_SUPPLIERSCONTRACT
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_SUPPLIERSCONTRACT" 
   (	"C_CODE" VARCHAR2(20), 
	"C_NAME1" VARCHAR2(100), 
	"C_PROJECT" VARCHAR2(100), 
	"C_SUPNAME" VARCHAR2(100), 
	"C_PROPERTY" VARCHAR2(20), 
	"C_TYPE" VARCHAR2(20), 
	"C_STATE" VARCHAR2(20), 
	"C_STYLE" VARCHAR2(20), 
	"C_RUNSTYLE" VARCHAR2(20), 
	"C_CASH" VARCHAR2(20), 
	"C_PAYMENTTYPE" VARCHAR2(20), 
	"C_MONEYTYPE" VARCHAR2(20), 
	"C_MONEY1" NUMBER(11,2), 
	"C_MONEY2" NUMBER(11,2), 
	"C_TYPEDETAIL" VARCHAR2(20), 
	"C_SUBJECT" VARCHAR2(20), 
	"C_DATE" DATE, 
	"C_STARTDATE" DATE, 
	"C_ENDSTART" DATE, 
	"C_SUMMARY" VARCHAR2(255), 
	"C_MESSAGE" VARCHAR2(20), 
	"C_MSGFROM" VARCHAR2(20), 
	"C_DUTYMAN" VARCHAR2(20), 
	"C_REGDATE" DATE, 
	"C_CHECKSTATE" NUMBER(1,0), 
	"C_PROCESSDEPT" VARCHAR2(20), 
	"C_PROCESSER" VARCHAR2(20), 
	"C_REMARK" VARCHAR2(255)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_CODE" IS '合同编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_NAME1" IS '合同名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_PROJECT" IS '项目名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_SUPNAME" IS '供应商名称';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_PROPERTY" IS '合同类型';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_TYPE" IS '合同类别';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_STATE" IS '合同状态';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_STYLE" IS '合同形式';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_RUNSTYLE" IS '合同执行方式';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_CASH" IS '收付方向';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_PAYMENTTYPE" IS '结算方式';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_MONEYTYPE" IS '货币类别';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_MONEY1" IS '合同金额';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_MONEY2" IS '合同签约金额';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_TYPEDETAIL" IS '详细分类';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_SUBJECT" IS '合同标的';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_DATE" IS '签订日期';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_STARTDATE" IS '开始日期';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_ENDSTART" IS '结束日期';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_SUMMARY" IS '合同简况';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_MESSAGE" IS '采购信息';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_MSGFROM" IS '采购来源';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_DUTYMAN" IS '责任人';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_REGDATE" IS '登记日期';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_CHECKSTATE" IS '审核状态 0 未审核 1 已审核 3 已删除';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_PROCESSDEPT" IS '经手人部门';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_PROCESSER" IS '经手人';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSCONTRACT"."C_REMARK" IS '备注';
--------------------------------------------------------
--  DDL for Table T_PRODUCTMGR_SUPPLIERSPRODUCT
--------------------------------------------------------

  CREATE TABLE "T_PRODUCTMGR_SUPPLIERSPRODUCT" 
   (	"SP_ID" VARCHAR2(20), 
	"C_CODE" VARCHAR2(20), 
	"P_CODE" VARCHAR2(12), 
	"SP_SPCODE" VARCHAR2(100), 
	"SP_PRICE" NUMBER(11,2), 
	"SP_NUM" NUMBER(11,0), 
	"SP_DESC" VARCHAR2(255), 
	"DEPT_CODE" VARCHAR2(20), 
	"SP_STATE" NUMBER(1,0), 
	"SP_ORDER" NUMBER(11,0)
   ) ;
 

   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."SP_ID" IS '商品id';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."C_CODE" IS '合同编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."P_CODE" IS '商品编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."SP_SPCODE" IS '供应商产品编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."SP_PRICE" IS '商品价格';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."SP_NUM" IS '商品数量';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."SP_DESC" IS '商品描述';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."DEPT_CODE" IS '分公司编码';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."SP_STATE" IS '状态';
 
   COMMENT ON COLUMN "T_PRODUCTMGR_SUPPLIERSPRODUCT"."SP_ORDER" IS '商品排序号';
 
   COMMENT ON TABLE "T_PRODUCTMGR_SUPPLIERSPRODUCT"  IS '供应商商品表';
--------------------------------------------------------
--  DDL for Table T_SALESMGR_ORDER
--------------------------------------------------------

  CREATE TABLE "T_SALESMGR_ORDER" 
   (	"ORDERNO" VARCHAR2(32), 
	"CUSTOMERID" VARCHAR2(20), 
	"CONSIGNEENAME" VARCHAR2(50), 
	"PAYTYPEID" NUMBER(10,0), 
	"LOGISTICTYPEID" NUMBER(10,0), 
	"COMPANYID" NUMBER(10,0), 
	"STATUSID" NUMBER(10,0), 
	"CREATEDATE" DATE, 
	"NEEDINVOICE" NUMBER(1,0), 
	"INVOICETITLETYPE" VARCHAR2(255), 
	"INVOICETITLE" VARCHAR2(255), 
	"INVOICECONTENT" VARCHAR2(255), 
	"REMARK" VARCHAR2(2), 
	"ISDELETE" NUMBER(10,0), 
	"USERID" NUMBER(10,0), 
	"ORIGNTYPE" VARCHAR2(20), 
	"SHIPSTATE" NUMBER(10,0), 
	"PAYSTATE" NUMBER(10,0)
   ) ;
 

   COMMENT ON COLUMN "T_SALESMGR_ORDER"."ORDERNO" IS '订单编号';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."CUSTOMERID" IS '客户编号';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."CONSIGNEENAME" IS '收货人姓名';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."PAYTYPEID" IS '付款方式id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."LOGISTICTYPEID" IS '送货方式id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."COMPANYID" IS '分公司id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."STATUSID" IS '订单状态id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."CREATEDATE" IS '下单时间';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."NEEDINVOICE" IS '是否需要开发票';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."INVOICETITLETYPE" IS '发票抬头类型';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."INVOICETITLE" IS '发票抬头';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."INVOICECONTENT" IS '发票名头';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."REMARK" IS '备注';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."ISDELETE" IS '是否删除';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."USERID" IS '操作人id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."ORIGNTYPE" IS '订单来源';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."SHIPSTATE" IS '发货状态';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER"."PAYSTATE" IS '付款状态';
 
   COMMENT ON TABLE "T_SALESMGR_ORDER"  IS '订单';
--------------------------------------------------------
--  DDL for Table T_SALESMGR_ORDER_DETAIL
--------------------------------------------------------

  CREATE TABLE "T_SALESMGR_ORDER_DETAIL" 
   (	"DETAILID" VARCHAR2(32), 
	"ORDERNO" VARCHAR2(32), 
	"PRODUCTCODE" VARCHAR2(20), 
	"MEMBERPRICE" FLOAT(126), 
	"ORDERQTY" FLOAT(126), 
	"AMOUNTPRICE" FLOAT(126), 
	"COMPANYID" NUMBER(10,0), 
	"DISCOUNTID" NUMBER(10,0), 
	"REMARK" VARCHAR2(512)
   ) ;
 

   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."DETAILID" IS '记录id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."ORDERNO" IS '订单编号';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."PRODUCTCODE" IS '商品编号';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."MEMBERPRICE" IS '商品价格';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."ORDERQTY" IS '商品订购数量';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."AMOUNTPRICE" IS '商品总价';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."COMPANYID" IS '分公司id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."DISCOUNTID" IS '优惠方案id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_DETAIL"."REMARK" IS '备注';
 
   COMMENT ON TABLE "T_SALESMGR_ORDER_DETAIL"  IS '订单明细';
--------------------------------------------------------
--  DDL for Table T_SALESMGR_ORDER_LOG
--------------------------------------------------------

  CREATE TABLE "T_SALESMGR_ORDER_LOG" 
   (	"LOGID" VARCHAR2(32), 
	"ORDERNO" VARCHAR2(32), 
	"STARTDATE" DATE, 
	"ENDDATE" DATE, 
	"USERID" NUMBER(10,0), 
	"ACTION" VARCHAR2(1000), 
	"REMARK" VARCHAR2(512)
   ) ;
 

   COMMENT ON COLUMN "T_SALESMGR_ORDER_LOG"."LOGID" IS '记录id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_LOG"."ORDERNO" IS '订单编号';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_LOG"."STARTDATE" IS '操作开始时间';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_LOG"."ENDDATE" IS '操作结束时间';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_LOG"."USERID" IS '操作人id';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_LOG"."ACTION" IS '行为';
 
   COMMENT ON COLUMN "T_SALESMGR_ORDER_LOG"."REMARK" IS '备注';
 
   COMMENT ON TABLE "T_SALESMGR_ORDER_LOG"  IS '订单日志';
--------------------------------------------------------
--  DDL for Table T_SALESMGR_REQ_PRODUCT
--------------------------------------------------------

  CREATE TABLE "T_SALESMGR_REQ_PRODUCT" 
   (	"PRODUCTID" VARCHAR2(32), 
	"CLIENTID" VARCHAR2(20), 
	"PRODUCTNAME" VARCHAR2(20), 
	"PRODUCTCODE" VARCHAR2(20), 
	"PRODUCTTYPE" VARCHAR2(20), 
	"MAXPRICE" FLOAT(126), 
	"ORDERQTY" FLOAT(126), 
	"AMOUNTPRICE" FLOAT(126), 
	"CREATEDATE" DATE, 
	"EXTPARAM" VARCHAR2(512), 
	"REMIND" NUMBER(1,0), 
	"REMARK" VARCHAR2(512)
   ) ;
 

   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."PRODUCTID" IS '记录id';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."CLIENTID" IS '客户id';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."PRODUCTNAME" IS '商品名称';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."PRODUCTCODE" IS '商品编号';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."PRODUCTTYPE" IS '商品类型';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."MAXPRICE" IS '最高单价(元)，选填，客户能承受的最高单价';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."ORDERQTY" IS '订购数量';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."AMOUNTPRICE" IS '商品总价(最高单价与订购数量的乘积)';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."CREATEDATE" IS '登记时间';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."EXTPARAM" IS '列表项(包含颜色、尺寸、材料、产地和自定义字段进行扩展登记)';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."REMIND" IS '是否到货提醒';
 
   COMMENT ON COLUMN "T_SALESMGR_REQ_PRODUCT"."REMARK" IS '备注';
 
   COMMENT ON TABLE "T_SALESMGR_REQ_PRODUCT"  IS '订货信息';
--------------------------------------------------------
--  DDL for Table T_SYS_ACCOUNT
--------------------------------------------------------

  CREATE TABLE "T_SYS_ACCOUNT" 
   (	"ACCOUNTID" CHAR(32), 
	"ACCOUNT" VARCHAR2(20), 
	"PASSWD" VARCHAR2(32), 
	"REMARK" VARCHAR2(1000), 
	"STATUS" NUMBER(3,0), 
	"CREATETIME" TIMESTAMP (6), 
	"LASTLOGINTIME" TIMESTAMP (6), 
	"QUERYSCOPE" VARCHAR2(1000)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_ACTION
--------------------------------------------------------

  CREATE TABLE "T_SYS_ACTION" 
   (	"ACTIONID" CHAR(32), 
	"ACTIONNAME" VARCHAR2(200), 
	"TYPE" NUMBER(3,0), 
	"MENUID" CHAR(32), 
	"REMARK" VARCHAR2(1000)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_FIELD
--------------------------------------------------------

  CREATE TABLE "T_SYS_FIELD" 
   (	"FIELDID" CHAR(32), 
	"FIELDNAME" VARCHAR2(32), 
	"FIELDREMARK" VARCHAR2(1000), 
	"MENUID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_MENU
--------------------------------------------------------

  CREATE TABLE "T_SYS_MENU" 
   (	"MENUID" CHAR(32), 
	"MENUNAME" VARCHAR2(20), 
	"TYPE" NUMBER(3,0), 
	"ACTIONID" CHAR(32), 
	"PARENTID" CHAR(32), 
	"SORTORDER" NUMBER(*,0), 
	"REMARK" VARCHAR2(1000)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_ORGANIZE
--------------------------------------------------------

  CREATE TABLE "T_SYS_ORGANIZE" 
   (	"ORGANIZEID" CHAR(32), 
	"FULLNAME" NVARCHAR2(200), 
	"ADDRESS" NVARCHAR2(1000), 
	"PHONE" VARCHAR2(20), 
	"ORGANIZEPARENTID" CHAR(32), 
	"DELETEMARK" NUMBER, 
	"DESCRIPTION" VARCHAR2(1000), 
	"LAYER" NUMBER(20,0), 
	"POSTALCODE" VARCHAR2(100), 
	"MANAGER" VARCHAR2(100), 
	"SORTCODE" NUMBER
   ) ;
 

   COMMENT ON COLUMN "T_SYS_ORGANIZE"."ADDRESS" IS '地址';
--------------------------------------------------------
--  DDL for Table T_SYS_ROLE
--------------------------------------------------------

  CREATE TABLE "T_SYS_ROLE" 
   (	"ROLEID" CHAR(32), 
	"ROLENAME" VARCHAR2(20), 
	"REMARK" VARCHAR2(1000), 
	"STATUS" NUMBER(3,0), 
	"ORDERCODE" NUMBER(38,0), 
	"ORGANIZEID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_ROLEACTION
--------------------------------------------------------

  CREATE TABLE "T_SYS_ROLEACTION" 
   (	"ID" CHAR(32), 
	"ROLEID" CHAR(32), 
	"ACTIONID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_ROLEFIELD
--------------------------------------------------------

  CREATE TABLE "T_SYS_ROLEFIELD" 
   (	"ID" CHAR(32), 
	"ROLEID" CHAR(32), 
	"FIELDID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_ROLEMENU
--------------------------------------------------------

  CREATE TABLE "T_SYS_ROLEMENU" 
   (	"ID" CHAR(32), 
	"ROLEID" CHAR(32), 
	"MENUID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_ROLEORGANIZE
--------------------------------------------------------

  CREATE TABLE "T_SYS_ROLEORGANIZE" 
   (	"ID" CHAR(32), 
	"ORGANIZEID" CHAR(32), 
	"ROLEID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_ROLEUSER
--------------------------------------------------------

  CREATE TABLE "T_SYS_ROLEUSER" 
   (	"ID" CHAR(32), 
	"ACCOUNTID" CHAR(32), 
	"ROLEID" CHAR(32)
   ) ;
--------------------------------------------------------
--  DDL for Table T_SYS_WRITELOG
--------------------------------------------------------

  CREATE TABLE "T_SYS_WRITELOG" 
   (	"COMPANY_CODE" VARCHAR2(20), 
	"TABLE_CODE" VARCHAR2(60), 
	"UPDATE_TIME" DATE, 
	"SQL_CODE" VARCHAR2(1000), 
	"SYNC_STATE" NUMBER(*,0) DEFAULT 0
   ) ;

---------------------------------------------------
--   DATA FOR TABLE T_BASE_LOGISTICSTATUS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_LOGISTICSTATUS

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_LOGISTICSTATUS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_OUTEORDER_DETAIL
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_OUTEORDER_DETAIL

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_OUTEORDER_DETAIL
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_AFTERSRV_EXCHANGE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_AFTERSRV_EXCHANGE

---------------------------------------------------
--   END DATA FOR TABLE T_AFTERSRV_EXCHANGE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_EXCHANGESTATUS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_EXCHANGESTATUS

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_EXCHANGESTATUS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_INTERFACETYPE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_INTERFACETYPE

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_INTERFACETYPE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ACCOUNT
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ACCOUNT
Insert into T_SYS_ACCOUNT (ACCOUNTID,ACCOUNT,PASSWD,REMARK,STATUS,CREATETIME,LASTLOGINTIME,QUERYSCOPE) values ('865F2990415841EA8007CEED42850BFD','admin','admin','1234',1,to_timestamp('21-2月 -11 03.14.54.140000000 下午','DD-MON-RR HH.MI.SS.FF AM'),to_timestamp('21-2月 -11 03.14.57.656000000 下午','DD-MON-RR HH.MI.SS.FF AM'),'1');

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ACCOUNT
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_PROPERTYVALUELINK
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_PROPERTYVALUELINK

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_PROPERTYVALUELINK
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_PAYTYPE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_PAYTYPE

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_PAYTYPE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_EXPORTLOG
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_EXPORTLOG

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_EXPORTLOG
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SALESMGR_REQ_PRODUCT
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SALESMGR_REQ_PRODUCT

---------------------------------------------------
--   END DATA FOR TABLE T_SALESMGR_REQ_PRODUCT
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_ORDERSTATUS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_ORDERSTATUS

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_ORDERSTATUS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_MSG
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_MSG

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_MSG
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ROLEFIELD
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ROLEFIELD

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ROLEFIELD
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_LOGISTICLEVEL
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_LOGISTICLEVEL

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_LOGISTICLEVEL
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_CLIENTMGR_PHONE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_CLIENTMGR_PHONE

---------------------------------------------------
--   END DATA FOR TABLE T_CLIENTMGR_PHONE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SALESMGR_ORDER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SALESMGR_ORDER

---------------------------------------------------
--   END DATA FOR TABLE T_SALESMGR_ORDER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_FINANCINGMGR_ACCOUNT
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_FINANCINGMGR_ACCOUNT

---------------------------------------------------
--   END DATA FOR TABLE T_FINANCINGMGR_ACCOUNT
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_AREA
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_AREA

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_AREA
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_OUTRORDER_DETAIL
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_OUTRORDER_DETAIL

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_OUTRORDER_DETAIL
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ORGANIZE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ORGANIZE
Insert into T_SYS_ORGANIZE (ORGANIZEID,FULLNAME,ADDRESS,PHONE,ORGANIZEPARENTID,DELETEMARK,DESCRIPTION,LAYER,POSTALCODE,MANAGER,SORTCODE) values ('rooooooooooooooooooooosooooooool','总部门','1','1','rooooooooooooooooooooooooooooool',1,'1',3,'1','1',1);
Insert into T_SYS_ORGANIZE (ORGANIZEID,FULLNAME,ADDRESS,PHONE,ORGANIZEPARENTID,DELETEMARK,DESCRIPTION,LAYER,POSTALCODE,MANAGER,SORTCODE) values ('rooooooooooooooooooooooooooooool','北京清新视界科技有限公司','1','1','root                            ',1,'1',1,'1','1',1);
Insert into T_SYS_ORGANIZE (ORGANIZEID,FULLNAME,ADDRESS,PHONE,ORGANIZEPARENTID,DELETEMARK,DESCRIPTION,LAYER,POSTALCODE,MANAGER,SORTCODE) values ('roooooooooooooooooooooooeooooool','分公司','1','1','rooooooooooooooooooooooooooooool',1,'1',2,'1','1',1);

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ORGANIZE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SALESMGR_ORDER_DETAIL
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SALESMGR_ORDER_DETAIL

---------------------------------------------------
--   END DATA FOR TABLE T_SALESMGR_ORDER_DETAIL
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_INTERFACE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_INTERFACE

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_INTERFACE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_ORDERTYPE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_ORDERTYPE

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_ORDERTYPE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASIC_EMP
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASIC_EMP

---------------------------------------------------
--   END DATA FOR TABLE T_BASIC_EMP
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_DEPTMENT
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_DEPTMENT

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_DEPTMENT
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_CLIENTMGR_DEPOSITSET
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_CLIENTMGR_DEPOSITSET
Insert into T_CLIENTMGR_DEPOSITSET (DEPOSITID,DEPOSITTYPE,DEPOSITRATE) values (1,'1','.5');

---------------------------------------------------
--   END DATA FOR TABLE T_CLIENTMGR_DEPOSITSET
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_DELIVERY
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_DELIVERY

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_DELIVERY
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_AFTERSRV_EXCHANGEGOODS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_AFTERSRV_EXCHANGEGOODS

---------------------------------------------------
--   END DATA FOR TABLE T_AFTERSRV_EXCHANGEGOODS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_CLIENTMGR_INFO
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_CLIENTMGR_INFO

---------------------------------------------------
--   END DATA FOR TABLE T_CLIENTMGR_INFO
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_FIELD
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_FIELD
Insert into T_SYS_FIELD (FIELDID,FIELDNAME,FIELDREMARK,MENUID) values ('829302598EEC4A9AA2C2C773D6CD17C1','name','名字','95C4A773139A468882F3F4342224C8AA');
Insert into T_SYS_FIELD (FIELDID,FIELDNAME,FIELDREMARK,MENUID) values ('64BD170DA03B4D879136F68784958A6F',null,null,'E7EEAD32259B430089C936AFF723D229');
Insert into T_SYS_FIELD (FIELDID,FIELDNAME,FIELDREMARK,MENUID) values ('7BD542CAC4E64CE2BABA4921A0FB0299',null,null,'E7EEAD32259B430089C936AFF723D229');

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_FIELD
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_PRODUCTSHOW
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_PRODUCTSHOW

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_PRODUCTSHOW
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_PROPERTYVALUES
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_PROPERTYVALUES

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_PROPERTYVALUES
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_RETURNSTATUS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_RETURNSTATUS

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_RETURNSTATUS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ROLEACTION
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ROLEACTION
Insert into T_SYS_ROLEACTION (ID,ROLEID,ACTIONID) values ('8612400C703F452092D6FB9D220151B9','10C4E757C0BB44E0BEB620226C719AED','B8EEEB8E7E924BE3BE5D5A22AA0A5CC2');
Insert into T_SYS_ROLEACTION (ID,ROLEID,ACTIONID) values ('3A3750F6BC90400C853DC8A74D42EB2C','10C4E757C0BB44E0BEB620226C719AED','32D1AE5DFD2F4E3A922F6C082A058D64');
Insert into T_SYS_ROLEACTION (ID,ROLEID,ACTIONID) values ('A7C81E67AD6F46F6A184EB941A827982','10C4E757C0BB44E0BEB620226C719AED','518237EBB93946DFB1224AAA79E2FF47');

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ROLEACTION
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_LOGISTICORDER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_LOGISTICORDER

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_LOGISTICORDER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_AFTERSRV_RETURN
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_AFTERSRV_RETURN

---------------------------------------------------
--   END DATA FOR TABLE T_AFTERSRV_RETURN
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_REASON
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_REASON

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_REASON
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_SUPPLIERLEVEL
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_SUPPLIERLEVEL

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_SUPPLIERLEVEL
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_SORTS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_SORTS

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_SORTS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_SUPPLIER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_SUPPLIER

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_SUPPLIER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_WRITELOG
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_WRITELOG

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_WRITELOG
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_SUPPLIERSCONTRACT
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_SUPPLIERSCONTRACT

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_SUPPLIERSCONTRACT
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ROLEORGANIZE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ROLEORGANIZE

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ROLEORGANIZE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_PRODUCTS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_PRODUCTS

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_PRODUCTS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_SUPPLIERSPRODUCT
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_SUPPLIERSPRODUCT

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_SUPPLIERSPRODUCT
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_PROPERTYLINK
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_PROPERTYLINK

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_PROPERTYLINK
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_OUTEORDER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_OUTEORDER

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_OUTEORDER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_SCOPE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_SCOPE

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_SCOPE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_OUTORDER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_OUTORDER
Insert into T_LOGISTICMGR_OUTORDER (ID,COMPANYID,ORDERID,CREATEDATE,IDFROMSUPPLIER,SUPPLIERID,SUPPLIERNAME,STATUS,AMOUNT,COST,NEEDINVOICE) values ('1','1','1','2011-02-21',null,null,null,null,null,null,null);

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_OUTORDER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_AFTERSRV_WORKORDERLOG
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_AFTERSRV_WORKORDERLOG
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('7667862554','我','你',0,8,'牧师',to_timestamp('24-2月 -11 04.20.46.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('0392422593','我','你',0,8,'牧师',to_timestamp('24-2月 -11 04.20.52.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('777777777999999','我','你',0,8,'牧师',to_timestamp('24-2月 -11 10.01.29.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('2869803261','我','你',0,8,'牧师',to_timestamp('24-2月 -11 10.18.42.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('2869803262','我','你',0,8,'牧师',to_timestamp('24-2月 -11 10.19.15.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('9684187612','我','你',0,8,'牧师',to_timestamp('24-2月 -11 03.10.15.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('7717216895','我','你',0,8,'牧师',to_timestamp('24-2月 -11 03.10.19.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('6391395824','我','你',0,8,'牧师',to_timestamp('25-2月 -11 08.38.38.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'));
Insert into T_AFTERSRV_WORKORDERLOG (WORKORDERID,SENDER,RECEIVER,PREPROGRESS,CURPROGRESS,CONTENT,INDATE) values ('0425210151','我','你',0,8,'牧师',to_timestamp('25-2月 -11 08.39.50.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'));

---------------------------------------------------
--   END DATA FOR TABLE T_AFTERSRV_WORKORDERLOG
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_LOGISTICTYPE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_LOGISTICTYPE

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_LOGISTICTYPE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ROLEMENU
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ROLEMENU
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('43278B2DE6F74F408E9A9DC835F5ADC0','10C4E757C0BB44E0BEB620226C719AED','roooooooooooooooooooooooooooooot');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('07F234B114FA4E9E9DDF610EFEF14929','10C4E757C0BB44E0BEB620226C719AED','20C4E757C0BB44E0BEB620226C719AED');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('58FE19B722734E9084D7054E3A33054A','10C4E757C0BB44E0BEB620226C719AED','95C4A773139A468882F3F4342224C8AA');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('13FBBD85A31A48788A3E8BCE4D083C65','10C4E757C0BB44E0BEB620226C719AED','36EF645CD43144A38EEF4FB8875067B5');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('3D0ABB1DF5BB4B64B1C3EE41F7871A7C','10C4E757C0BB44E0BEB620226C719AED','6732E616F66D414EB7FFD3207FA1CABE');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('E3559641BEBB418A96DEE90AEF2C2E68','10C4E757C0BB44E0BEB620226C719AED','9E320D132C1F43C6B4AE4C7CFDBB3DCE');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('6379684A973D466D8FAFFE2A7C3389A3','10C4E757C0BB44E0BEB620226C719AED','75FD5F5454C7472FB394AAEF7E49C717');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('2B69FD38A5304A4493755A18A181377F','10C4E757C0BB44E0BEB620226C719AED','7493FE69487449D8A5C1828E25BC8479');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('F9A8E0E7C470432782A52EEB762AA777','10C4E757C0BB44E0BEB620226C719AED','CD4D834B23664BB3B462AEE9AAC3666C');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('318A04A56DE544C7A3E8DDAB8614A95A','10C4E757C0BB44E0BEB620226C719AED','E963F17152DE4A7E8E48DF38E9AFD4CC');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('B7C540EF446741B8B814DBCB67D0400A','10C4E757C0BB44E0BEB620226C719AED','645267CBF9DC44BEA587AEBFCB67C517');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('379313BFD18D445388DCAAA09882C431','10C4E757C0BB44E0BEB620226C719AED','5A2F7EB0CEF24C2492F26B1352DB6C8D');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('5CA0C78474D44E6D86BE184012F3F5EC','10C4E757C0BB44E0BEB620226C719AED','838BDA77DE4949A1AF8E44653014517E');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('31D190F67BC149F1911C6EA10168632D','10C4E757C0BB44E0BEB620226C719AED','7594C4109D264827AFA2FE0B336FB6E7');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('D9A67B60B09E4CD197AE6582AFC06014','10C4E757C0BB44E0BEB620226C719AED','59BCCC7DD32143E7A9A281045B169B37');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('78D5C67928624C7692E0630A11BA87FA','10C4E757C0BB44E0BEB620226C719AED','55E3930A736B4FC4A4490AE082861004');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('2C60E034B70349D298FC14E5E857B00A','10C4E757C0BB44E0BEB620226C719AED','B51B536394C1463BA509B379BF825F19');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('24DB135D1208413EBDFD6046A9DFB4EA','10C4E757C0BB44E0BEB620226C719AED','27D969E5D98D493BA3CAE1A9B60FF452');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('E6368127DA5B4D22BB5381C70F66308D','10C4E757C0BB44E0BEB620226C719AED','EB2C3B8FC26047C490B80ED0F7BAA58B');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('6A6583F20EEF431D8451F90FEC25441E','10C4E757C0BB44E0BEB620226C719AED','288EDE6E4A0445F0A5E3FAD6C30CF1DD');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('02A59DF01A2C43DBB48ABD15542AE299','10C4E757C0BB44E0BEB620226C719AED','41300F4776864D388539DA27E7696DAC');
Insert into T_SYS_ROLEMENU (ID,ROLEID,MENUID) values ('B4D720F2D4A04237A16F58ADF8A889C3','10C4E757C0BB44E0BEB620226C719AED','F2734546B1574970AAB1385E350C31BE');

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ROLEMENU
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_SUPTYPE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_SUPTYPE

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_SUPTYPE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_CLIENTMGR_OPERATEHISTORY
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_CLIENTMGR_OPERATEHISTORY

---------------------------------------------------
--   END DATA FOR TABLE T_CLIENTMGR_OPERATEHISTORY
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_LOGISTIC
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_LOGISTIC

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_LOGISTIC
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_OUTRORDER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_OUTRORDER

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_OUTRORDER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SALESMGR_ORDER_LOG
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SALESMGR_ORDER_LOG

---------------------------------------------------
--   END DATA FOR TABLE T_SALESMGR_ORDER_LOG
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE TWLSTORE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into TWLSTORE
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (-1,-1,2,'[B@155ae9');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (134217727,-3,0,'[B@39bf7');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (268435454,-3,0,'[B@f4af9b');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (402653181,-3,0,'[B@350f8f');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (536870908,-3,0,'[B@1907878');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (671088635,-3,0,'[B@1d51122');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (805306362,-3,0,'[B@157f820');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (939524089,-3,0,'[B@631421');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (1073741816,-3,0,'[B@beb918');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (1207959543,-3,0,'[B@169de38');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (1342177270,-3,0,'[B@17c3462');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (1476394997,-3,0,'[B@15338bf');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (1610612724,-3,0,'[B@b2c4e7');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (1744830451,-3,0,'[B@9d32ab');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (1879048178,-3,0,'[B@698d61');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (2013265905,-3,0,'[B@1c110d4');
Insert into TWLSTORE (ID,TYPE,HANDLE,RECORD) values (2147483632,-3,0,'[B@38048a');

---------------------------------------------------
--   END DATA FOR TABLE TWLSTORE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_DEPTMENTLINK
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_DEPTMENTLINK

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_DEPTMENTLINK
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_FINANCINGMGR_RECORDED
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_FINANCINGMGR_RECORDED

---------------------------------------------------
--   END DATA FOR TABLE T_FINANCINGMGR_RECORDED
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_BILLTEMPLATE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_BILLTEMPLATE

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_BILLTEMPLATE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_CLIENTMGR_GRADE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_CLIENTMGR_GRADE

---------------------------------------------------
--   END DATA FOR TABLE T_CLIENTMGR_GRADE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ACTION
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ACTION
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('77077CE2DE994718959AB02B25D5D9E2','organize.do?method=toOrganizeList',1,'36EF645CD43144A38EEF4FB8875067B5','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('32D1AE5DFD2F4E3A922F6C082A058D64','ordermgr.do?method=addOrder',2,'645267CBF9DC44BEA587AEBFCB67C517','添加订单');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('10ECF76E75404352AC126BCD11AEA5F1','menu.do?method=MenuList',1,'95C4A773139A468882F3F4342224C8AA','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('4E6120C6899D4974A8D809D949F8F348','a.do?method=add',1,'7493FE69487449D8A5C1828E25BC8479','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('0933A42582E046AABDF5B6372CB329C5','shoukuan.do',1,'838BDA77DE4949A1AF8E44653014517E','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('A82E396875954052961F5E9B996F332E','授权动作',2,'B51B536394C1463BA509B379BF825F19','授权动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('518237EBB93946DFB1224AAA79E2FF47','ordermgr.do?method=addOrder',2,'838BDA77DE4949A1AF8E44653014517E',null);
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('459690D88EF7476C991FB7E50DF2F89E','shoukuan.do',1,'B51B536394C1463BA509B379BF825F19','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('178A4D0FC509494CA50CC92B8797088D','*.do',1,'516AFD1D89424A519A68C4A6634344B8','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('4ECD4D7D2B674FA7B215A1AC4D657B2A','freshview/afterservicemgr/pages/addworkorder.jsp',1,'CD4D834B23664BB3B462AEE9AAC3666C','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('850FE54ACF7C46B3B928457517789817','contract.do',1,'F2734546B1574970AAB1385E350C31BE','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('49DDCCDC7EB34EAF98563B5C2F740BE7','abc.do',1,'9E320D132C1F43C6B4AE4C7CFDBB3DCE','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('EB73D941AE864BB5A2E4DDCD71AA439C','ordermgr.do',1,'645267CBF9DC44BEA587AEBFCB67C517','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('560CB36F19724830967E6DD1A7A14088','orderList.do',1,'59BCCC7DD32143E7A9A281045B169B37','菜单所属动作');
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('69721D9221D5483584BD8C393887EA6E','outOrder.do?method=getList',2,'59BCCC7DD32143E7A9A281045B169B37',null);
Insert into T_SYS_ACTION (ACTIONID,ACTIONNAME,TYPE,MENUID,REMARK) values ('B8EEEB8E7E924BE3BE5D5A22AA0A5CC2','afterservice/workorder.do?method=addworkorder',2,'CD4D834B23664BB3B462AEE9AAC3666C','添加');

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ACTION
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_MENU
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_MENU
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('36EF645CD43144A38EEF4FB8875067B5','组织机构',2,'77077CE2DE994718959AB02B25D5D9E2','20C4E757C0BB44E0BEB620226C719AED',2,'组织机构');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('roooooooooooooooooooooooooooooot','清新ERP管理系统',1,null,null,1,'清新ERP管理系统');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('75FD5F5454C7472FB394AAEF7E49C717','售后服务',1,'C09D8BD7152043AA922FD0E44F017928','roooooooooooooooooooooooooooooot',4,'售后服务');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('7493FE69487449D8A5C1828E25BC8479','换货',2,'4E6120C6899D4974A8D809D949F8F348','75FD5F5454C7472FB394AAEF7E49C717',1,null);
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('55E3930A736B4FC4A4490AE082861004','测试2',1,'E39D6472F3C94660B8810361EB70FA00','roooooooooooooooooooooooooooooot',8,'测试2');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('5A2F7EB0CEF24C2492F26B1352DB6C8D','财务管理',1,'3EF3FE92BCF24A6BA16F606FDB8F7482','roooooooooooooooooooooooooooooot',6,null);
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('95C4A773139A468882F3F4342224C8AA','菜单管理',2,'10ECF76E75404352AC126BCD11AEA5F1','20C4E757C0BB44E0BEB620226C719AED',1,'菜单管理');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('838BDA77DE4949A1AF8E44653014517E','收款处理',2,'0933A42582E046AABDF5B6372CB329C5','5A2F7EB0CEF24C2492F26B1352DB6C8D',1,null);
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('B51B536394C1463BA509B379BF825F19','测试无',2,'459690D88EF7476C991FB7E50DF2F89E','55E3930A736B4FC4A4490AE082861004',1,'测试无');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('F903F54663A54DCBB166B2D86F48B18D','客户关系管理',1,'5FB34F0B39694848903F7C0A2A23B349','roooooooooooooooooooooooooooooot',11,'客户关系管理');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('30B49B7B9B724B1CA9BA8DE516901913','等级管理',1,'71FABE62B71944FC9AC93BBA81BD4FF4','F903F54663A54DCBB166B2D86F48B18D',1,'等级管理');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('516AFD1D89424A519A68C4A6634344B8','等级列表',2,'178A4D0FC509494CA50CC92B8797088D','30B49B7B9B724B1CA9BA8DE516901913',1,'等级列表');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('CD4D834B23664BB3B462AEE9AAC3666C','咨询建议投诉保修维修',2,'4ECD4D7D2B674FA7B215A1AC4D657B2A','75FD5F5454C7472FB394AAEF7E49C717',2,null);
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('41300F4776864D388539DA27E7696DAC','供应商管理',1,'096E9BB380944E048BA89C95B7A1BB95','roooooooooooooooooooooooooooooot',10,'供应商管理');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('F2734546B1574970AAB1385E350C31BE','合同管理',2,'850FE54ACF7C46B3B928457517789817','41300F4776864D388539DA27E7696DAC',1,'合同信息列表');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('20C4E757C0BB44E0BEB620226C719AED','系统管理',1,null,'roooooooooooooooooooooooooooooot',1,'系统管理');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('27D969E5D98D493BA3CAE1A9B60FF452','基础信息管理',1,'7B10695732DA4A1AAB1CFB2A41447074','roooooooooooooooooooooooooooooot',9,'基础信息管理');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('EB2C3B8FC26047C490B80ED0F7BAA58B','合同类别',1,'3C6FD47FE66741998FDB1B727C14E723','27D969E5D98D493BA3CAE1A9B60FF452',1,'合同类别');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('288EDE6E4A0445F0A5E3FAD6C30CF1DD','供应商管理',2,'4944E8CBC4F040B58C4B1BBA45D1A4C2','27D969E5D98D493BA3CAE1A9B60FF452',2,null);
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('6732E616F66D414EB7FFD3207FA1CABE','测试',1,'2DEA95E2117D4A83B1129C1E8F13D10D','roooooooooooooooooooooooooooooot',2,'测试');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('9E320D132C1F43C6B4AE4C7CFDBB3DCE','测试无子菜单',2,'49DDCCDC7EB34EAF98563B5C2F740BE7','6732E616F66D414EB7FFD3207FA1CABE',1,'测试无子菜单');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('E963F17152DE4A7E8E48DF38E9AFD4CC','话务中心',1,'AE4F5EFFB6914A62BABFBF55007FCF06','roooooooooooooooooooooooooooooot',5,'销售管理系统');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('645267CBF9DC44BEA587AEBFCB67C517','订单管理',2,'EB73D941AE864BB5A2E4DDCD71AA439C','E963F17152DE4A7E8E48DF38E9AFD4CC',1,'订单管理');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('7594C4109D264827AFA2FE0B336FB6E7','物流管理',1,'1FB1D9E7F5A447C7954697B3B686FD9B','roooooooooooooooooooooooooooooot',7,'物流部相关');
Insert into T_SYS_MENU (MENUID,MENUNAME,TYPE,ACTIONID,PARENTID,SORTORDER,REMARK) values ('59BCCC7DD32143E7A9A281045B169B37','采购单管理',2,'560CB36F19724830967E6DD1A7A14088','7594C4109D264827AFA2FE0B336FB6E7',1,null);

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_MENU
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_BANK
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_BANK
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (1,'中国建设银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (2,'中国工商银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (3,'中国农业银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (4,'中国银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (5,'招商银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (6,'兴业银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (7,'中国光大银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (8,'广东发展银行','1');
Insert into T_BASE_BANK (BANKID,BANKNAME,STATUS) values (9,'上海浦发银行','1');

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_BANK
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_PROPERTY
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_PROPERTY

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_PROPERTY
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ROLE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ROLE
Insert into T_SYS_ROLE (ROLEID,ROLENAME,REMARK,STATUS,ORDERCODE,ORGANIZEID) values ('10C4E757C0BB44E0BEB620226C719AED','管理员','管理员',1,1,'rooooooooooooooooooooooooooooool');

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ROLE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_PRODUCTMGR_AREACONTRACTLINK
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_PRODUCTMGR_AREACONTRACTLINK

---------------------------------------------------
--   END DATA FOR TABLE T_PRODUCTMGR_AREACONTRACTLINK
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_AFTERSRV_RETURNGOODS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_AFTERSRV_RETURNGOODS

---------------------------------------------------
--   END DATA FOR TABLE T_AFTERSRV_RETURNGOODS
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_SYS_ROLEUSER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_SYS_ROLEUSER
Insert into T_SYS_ROLEUSER (ID,ACCOUNTID,ROLEID) values ('865F2990415841EA8007CEED428e0BFD','865F2990415841EA8007CEED42850BFD','10C4E757C0BB44E0BEB620226C719AED');

---------------------------------------------------
--   END DATA FOR TABLE T_SYS_ROLEUSER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_AFTERSRV_WORKORDER
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_AFTERSRV_WORKORDER
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('7667862554','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('24-2月 -11 04.20.46.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('24-2月 -11 04.20.46.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('0392422593','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('24-2月 -11 04.20.52.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('24-2月 -11 04.20.52.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('777777777999999','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('24-2月 -11 10.01.29.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('24-2月 -11 10.01.29.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('2869803261','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('24-2月 -11 10.18.42.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('24-2月 -11 10.18.42.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('2869803262','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('24-2月 -11 10.19.15.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('24-2月 -11 10.19.15.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('9684187612','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('24-2月 -11 03.10.15.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('24-2月 -11 03.10.15.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('7717216895','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('24-2月 -11 03.10.19.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('24-2月 -11 03.10.19.000000000 下午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('6391395824','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('25-2月 -11 08.38.38.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('25-2月 -11 08.38.38.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');
Insert into T_AFTERSRV_WORKORDER (ID,TYPE,USERID,COMPANYID,WORKERID,CONTENT,EXPECTDATE,FINISHDATE,INDATE,STATUS,PROGRESS,REMARK) values ('0425210151','1','9527','0000','007','哇卡卡卡卡卡',to_timestamp('25-2月 -11 08.39.50.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),null,to_timestamp('25-2月 -11 08.39.50.000000000 上午','DD-MON-RR HH.MI.SS.FF AM'),'0',0,'备注');

---------------------------------------------------
--   END DATA FOR TABLE T_AFTERSRV_WORKORDER
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_LOGISTICMGR_OUTORDER_DETAIL
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_LOGISTICMGR_OUTORDER_DETAIL

---------------------------------------------------
--   END DATA FOR TABLE T_LOGISTICMGR_OUTORDER_DETAIL
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_BASE_CONTRACTTYPE
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_BASE_CONTRACTTYPE

---------------------------------------------------
--   END DATA FOR TABLE T_BASE_CONTRACTTYPE
---------------------------------------------------

---------------------------------------------------
--   DATA FOR TABLE T_CLIENTMGR_ADDRESS
--   FILTER = none used
---------------------------------------------------
REM INSERTING into T_CLIENTMGR_ADDRESS

---------------------------------------------------
--   END DATA FOR TABLE T_CLIENTMGR_ADDRESS
---------------------------------------------------
--------------------------------------------------------
--  Constraints for Table TWLSTORE
--------------------------------------------------------

  ALTER TABLE "TWLSTORE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "TWLSTORE" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "TWLSTORE" MODIFY ("HANDLE" NOT NULL ENABLE);
 
  ALTER TABLE "TWLSTORE" MODIFY ("RECORD" NOT NULL ENABLE);
 
  ALTER TABLE "TWLSTORE" ADD PRIMARY KEY ("ID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_AFTERSRV_EXCHANGE
--------------------------------------------------------

  ALTER TABLE "T_AFTERSRV_EXCHANGE" ADD CONSTRAINT "PK_EXCHANGE" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("WORKORDERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("USERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("USERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("USERADDRESS" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("USERPHONE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("USERMOBILE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("USERZIPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("INDATE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("REMARK" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGE" MODIFY ("CHANGELOG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_AFTERSRV_EXCHANGEGOODS
--------------------------------------------------------

  ALTER TABLE "T_AFTERSRV_EXCHANGEGOODS" MODIFY ("EXCHANGEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGEGOODS" MODIFY ("ORDERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGEGOODS" MODIFY ("GOODSID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGEGOODS" MODIFY ("GOODSTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGEGOODS" MODIFY ("GOODSNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGEGOODS" MODIFY ("GOODSAMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_EXCHANGEGOODS" MODIFY ("REASONID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_AFTERSRV_RETURN
--------------------------------------------------------

  ALTER TABLE "T_AFTERSRV_RETURN" ADD CONSTRAINT "PK_RETURN" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("WORKORDERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("USERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("USERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("USERADDRESS" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("USERPHONE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("USERMOBILE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("USERZIPCODE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("GOODSTOTALPRICE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("INDATE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("REMARK" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_RETURN" MODIFY ("CHANGELOG" NOT NULL ENABLE);

--------------------------------------------------------
--  Constraints for Table T_AFTERSRV_WORKORDER
--------------------------------------------------------

  ALTER TABLE "T_AFTERSRV_WORKORDER" ADD CONSTRAINT "PK_WORKORDER" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("USERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("WORKERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("CONTENT" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("EXPECTDATE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("INDATE" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDER" MODIFY ("PROGRESS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_AFTERSRV_WORKORDERLOG
--------------------------------------------------------

  ALTER TABLE "T_AFTERSRV_WORKORDERLOG" MODIFY ("WORKORDERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDERLOG" MODIFY ("SENDER" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDERLOG" MODIFY ("RECEIVER" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDERLOG" MODIFY ("PREPROGRESS" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDERLOG" MODIFY ("CURPROGRESS" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDERLOG" MODIFY ("CONTENT" NOT NULL ENABLE);
 
  ALTER TABLE "T_AFTERSRV_WORKORDERLOG" MODIFY ("INDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_AREA
--------------------------------------------------------

  ALTER TABLE "T_BASE_AREA" ADD CONSTRAINT "PK_AREA" PRIMARY KEY ("AREAID") ENABLE;
 
  ALTER TABLE "T_BASE_AREA" MODIFY ("AREAID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_BANK
--------------------------------------------------------

  ALTER TABLE "T_BASE_BANK" ADD CONSTRAINT "PK_BANK" PRIMARY KEY ("BANKID") ENABLE;
 
  ALTER TABLE "T_BASE_BANK" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_BILLTEMPLATE
--------------------------------------------------------

  ALTER TABLE "T_BASE_BILLTEMPLATE" ADD CONSTRAINT "PK_BILLTEMPLATE" PRIMARY KEY ("ID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BASE_CONTRACTTYPE
--------------------------------------------------------

  ALTER TABLE "T_BASE_CONTRACTTYPE" ADD CONSTRAINT "PK_CONTRACTTYPE" PRIMARY KEY ("ID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BASE_EXCHANGESTATUS
--------------------------------------------------------

  ALTER TABLE "T_BASE_EXCHANGESTATUS" ADD CONSTRAINT "PK_EXCHANGESTATUS" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_EXCHANGESTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_EXCHANGESTATUS" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_EXPORTLOG
--------------------------------------------------------

  ALTER TABLE "T_BASE_EXPORTLOG" ADD CONSTRAINT "PK_EXPORTLOG" PRIMARY KEY ("ID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BASE_INTERFACETYPE
--------------------------------------------------------

  ALTER TABLE "T_BASE_INTERFACETYPE" ADD CONSTRAINT "PK_INTERFACETYPE" PRIMARY KEY ("ID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BASE_LOGISTICLEVEL
--------------------------------------------------------

  ALTER TABLE "T_BASE_LOGISTICLEVEL" ADD CONSTRAINT "PK_LOGISTICLEVEL" PRIMARY KEY ("COMPANYID", "LOGISTICID") ENABLE;
 
  ALTER TABLE "T_BASE_LOGISTICLEVEL" MODIFY ("COMPANYID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_LOGISTICSTATUS
--------------------------------------------------------

  ALTER TABLE "T_BASE_LOGISTICSTATUS" ADD CONSTRAINT "PK_LOGISTICSTATUS" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_LOGISTICSTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_LOGISTICSTATUS" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_LOGISTICTYPE
--------------------------------------------------------

  ALTER TABLE "T_BASE_LOGISTICTYPE" ADD CONSTRAINT "PK_LOGISTICSTYPE" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_LOGISTICTYPE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_MSG
--------------------------------------------------------

  ALTER TABLE "T_BASE_MSG" ADD CONSTRAINT "PK_MSG" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_MSG" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_ORDERSTATUS
--------------------------------------------------------

  ALTER TABLE "T_BASE_ORDERSTATUS" ADD CONSTRAINT "PK_ORDERSTATUS" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_ORDERSTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_ORDERSTATUS" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_ORDERTYPE
--------------------------------------------------------

  ALTER TABLE "T_BASE_ORDERTYPE" ADD CONSTRAINT "PK_ORDERTYPE" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_ORDERTYPE" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_PAYTYPE
--------------------------------------------------------

  ALTER TABLE "T_BASE_PAYTYPE" ADD CONSTRAINT "PK_PAYTYPE" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_PAYTYPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_PAYTYPE" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_REASON
--------------------------------------------------------

  ALTER TABLE "T_BASE_REASON" ADD CONSTRAINT "PK_REASON" PRIMARY KEY ("ID") DISABLE;
 
  ALTER TABLE "T_BASE_REASON" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_REASON" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_RETURNSTATUS
--------------------------------------------------------

  ALTER TABLE "T_BASE_RETURNSTATUS" ADD CONSTRAINT "PK_RETUANSTATUS" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_BASE_RETURNSTATUS" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_RETURNSTATUS" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_SUPPLIER
--------------------------------------------------------

  ALTER TABLE "T_BASE_SUPPLIER" ADD CONSTRAINT "PK_SUPPLIER" PRIMARY KEY ("SUPCODE") ENABLE;
 
  ALTER TABLE "T_BASE_SUPPLIER" MODIFY ("SUPNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_SUPPLIER" MODIFY ("TYPECODE" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_SUPPLIER" MODIFY ("LEGALPERSON" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_SUPPLIER" MODIFY ("TEL" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASE_SUPPLIER" MODIFY ("STOPFLAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_SUPPLIERLEVEL
--------------------------------------------------------

  ALTER TABLE "T_BASE_SUPPLIERLEVEL" ADD CONSTRAINT "PK_SUPPLIERLEVEL" PRIMARY KEY ("COMPANYID", "SUPPLIERID", "PRODUCTID") ENABLE;
 
  ALTER TABLE "T_BASE_SUPPLIERLEVEL" MODIFY ("COMPANYID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_BASE_SUPTYPE
--------------------------------------------------------

  ALTER TABLE "T_BASE_SUPTYPE" ADD CONSTRAINT "PK_SUPTYPE" PRIMARY KEY ("ID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_BASIC_EMP
--------------------------------------------------------

  ALTER TABLE "T_BASIC_EMP" ADD CONSTRAINT "PK8" PRIMARY KEY ("EMPID") ENABLE;
 
  ALTER TABLE "T_BASIC_EMP" MODIFY ("EMPID" NOT NULL ENABLE);
 
  ALTER TABLE "T_BASIC_EMP" MODIFY ("EMPTYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_CLIENTMGR_ADDRESS
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_ADDRESS" ADD CONSTRAINT "PK_ADDRESS" PRIMARY KEY ("ADDRESSID") ENABLE;
 
  ALTER TABLE "T_CLIENTMGR_ADDRESS" MODIFY ("ADDRESSID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_ADDRESS" MODIFY ("CLIENTID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_ADDRESS" MODIFY ("DEFAULTADDR" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_ADDRESS" MODIFY ("PROVINCE" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_ADDRESS" MODIFY ("CITY" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_ADDRESS" MODIFY ("BOROUGH" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_ADDRESS" MODIFY ("DETAILADDR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_CLIENTMGR_DEPOSITSET
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_DEPOSITSET" ADD CONSTRAINT "PK_DEPOSITSET" PRIMARY KEY ("DEPOSITID") ENABLE;
 
  ALTER TABLE "T_CLIENTMGR_DEPOSITSET" MODIFY ("DEPOSITID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_DEPOSITSET" MODIFY ("DEPOSITTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_DEPOSITSET" MODIFY ("DEPOSITRATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_CLIENTMGR_GRADE
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_GRADE" ADD CONSTRAINT "PK_GRADE" PRIMARY KEY ("GRADEID") ENABLE;
 
  ALTER TABLE "T_CLIENTMGR_GRADE" MODIFY ("GRADEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_GRADE" MODIFY ("GRADENAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_GRADE" MODIFY ("DISCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_GRADE" MODIFY ("DEPOSITRANGE" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_GRADE" MODIFY ("DEPOSITDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_CLIENTMGR_INFO
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_INFO" ADD CONSTRAINT "PK_INFO" PRIMARY KEY ("CLIENTID") ENABLE;
 
  ALTER TABLE "T_CLIENTMGR_INFO" MODIFY ("CLIENTID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_INFO" MODIFY ("CLIENTNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_INFO" MODIFY ("GRADEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_INFO" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_INFO" MODIFY ("CLIENTSEX" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_INFO" MODIFY ("ADDDATE" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_INFO" MODIFY ("CLIENTSTATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_CLIENTMGR_OPERATEHISTORY
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_OPERATEHISTORY" ADD CONSTRAINT "PK_OPERATEHISTORY" PRIMARY KEY ("OPERATEID") ENABLE;
 
  ALTER TABLE "T_CLIENTMGR_OPERATEHISTORY" MODIFY ("OPERATEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_OPERATEHISTORY" MODIFY ("OPERATERID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_OPERATEHISTORY" MODIFY ("OPERATERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_OPERATEHISTORY" MODIFY ("OPERATETIME" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_OPERATEHISTORY" MODIFY ("OPERATETYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_CLIENTMGR_PHONE
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_PHONE" ADD CONSTRAINT "PK_PHONE" PRIMARY KEY ("PHONEID") ENABLE;
 
  ALTER TABLE "T_CLIENTMGR_PHONE" MODIFY ("PHONEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_PHONE" MODIFY ("CLIENTID" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_PHONE" MODIFY ("PHONE" NOT NULL ENABLE);
 
  ALTER TABLE "T_CLIENTMGR_PHONE" MODIFY ("DEFAULTFLAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_FINANCINGMGR_ACCOUNT
--------------------------------------------------------

  ALTER TABLE "T_FINANCINGMGR_ACCOUNT" ADD CONSTRAINT "PK_T_FINANCINGMGR_ACCOUNT" PRIMARY KEY ("ACCOUNTNO") ENABLE;
 
  ALTER TABLE "T_FINANCINGMGR_ACCOUNT" MODIFY ("ACCOUNTNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_FINANCINGMGR_RECORDED
--------------------------------------------------------

  ALTER TABLE "T_FINANCINGMGR_RECORDED" ADD CONSTRAINT "PK_T_FINANCINGMGR_RECORDED" PRIMARY KEY ("RECORDEDNO") ENABLE;
 
  ALTER TABLE "T_FINANCINGMGR_RECORDED" MODIFY ("RECORDEDNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_INTERFACE
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_INTERFACE" ADD CONSTRAINT "PK_INTERFACE" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_LOGISTICMGR_INTERFACE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_INTERFACE" MODIFY ("COMPANYID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_LOGISTIC
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_LOGISTIC" ADD CONSTRAINT "PK_LOGISTIC" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_LOGISTICMGR_LOGISTIC" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_LOGISTIC" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_LOGISTIC" MODIFY ("NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_LOGISTICORDER
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_LOGISTICORDER" ADD CONSTRAINT "PK_LOGISTICORDER" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_LOGISTICMGR_LOGISTICORDER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_LOGISTICORDER" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_LOGISTICORDER" MODIFY ("ORDERTYPE" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_LOGISTICORDER" MODIFY ("ORDERID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_OUTEORDER
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_OUTEORDER" ADD CONSTRAINT "PK_OUTEORDER" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_LOGISTICMGR_OUTEORDER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_OUTEORDER" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_OUTEORDER" MODIFY ("ORDERID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_OUTEORDER_DETAIL
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_OUTEORDER_DETAIL" ADD CONSTRAINT "PK_OUTEORDER_DETAIL" PRIMARY KEY ("ORDERID", "OUTORDERID", "PRODUCTID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_OUTORDER
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_OUTORDER" ADD CONSTRAINT "PK_OUTORDER" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_LOGISTICMGR_OUTORDER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_OUTORDER" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_OUTORDER" MODIFY ("ORDERID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_OUTORDER_DETAIL
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_OUTORDER_DETAIL" ADD CONSTRAINT "PK_OUTORDER_DETAIL" PRIMARY KEY ("ORDERID", "OUTORDERID", "PRODUCTID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_OUTRORDER
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_OUTRORDER" ADD CONSTRAINT "PK_OUTRORDER" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_LOGISTICMGR_OUTRORDER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_OUTRORDER" MODIFY ("COMPANYID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_OUTRORDER" MODIFY ("ORDERID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_OUTRORDER_DETAIL
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_OUTRORDER_DETAIL" ADD CONSTRAINT "PK_OUTRORDER_DETAIL" PRIMARY KEY ("ORDERID", "OUTORDERID", "PRODUCTID") ENABLE;
--------------------------------------------------------
--  Constraints for Table T_LOGISTICMGR_SCOPE
--------------------------------------------------------

  ALTER TABLE "T_LOGISTICMGR_SCOPE" ADD CONSTRAINT "PK_SCOPE" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_LOGISTICMGR_SCOPE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_LOGISTICMGR_SCOPE" MODIFY ("LOGISTICID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_AREACONTRACTLINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_AREACONTRACTLINK" ADD CONSTRAINT "PK_T_PRODUCTMGR_AREACONTRACTLI" PRIMARY KEY ("ACL_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_AREACONTRACTLINK" MODIFY ("ACL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_DELIVERY
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_DELIVERY" ADD CONSTRAINT "PK_T_PRODUCTMGR_DELIVERY" PRIMARY KEY ("D_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_DELIVERY" MODIFY ("D_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_DEPTMENT
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_DEPTMENT" ADD CONSTRAINT "PK_T_PRODUCTMGR_DEPTMENT" PRIMARY KEY ("DEPT_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_DEPTMENT" MODIFY ("DEPT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_DEPTMENTLINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_DEPTMENTLINK" ADD CONSTRAINT "PK_T_PRODUCTMGR_DEPTMENTLINK" PRIMARY KEY ("DEPT_CODE", "C_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_DEPTMENTLINK" MODIFY ("DEPT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "T_PRODUCTMGR_DEPTMENTLINK" MODIFY ("C_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_PRODUCTS
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PRODUCTS" ADD CONSTRAINT "PK_T_PRODUCTMGR_PRODUCTS" PRIMARY KEY ("P_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PRODUCTS" MODIFY ("P_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_PRODUCTSHOW
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PRODUCTSHOW" ADD CONSTRAINT "PK_T_PRODUCTMGR_PRODUCTSHOW" PRIMARY KEY ("PSH_ID") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PRODUCTSHOW" MODIFY ("PSH_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_PROPERTY
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PROPERTY" ADD CONSTRAINT "PK_T_PRODUCTMGR_PROPERTY" PRIMARY KEY ("PROPERTY_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTY" MODIFY ("PROPERTY_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_PROPERTYLINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PROPERTYLINK" ADD CONSTRAINT "PK_T_PRODUCTMGR_PROPERTYLINK" PRIMARY KEY ("SORT_CODE", "PROPERTY_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTYLINK" MODIFY ("SORT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTYLINK" MODIFY ("PROPERTY_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_PROPERTYVALUELINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUELINK" ADD CONSTRAINT "PK_T_PRODUCTMGR_PROPERTYVALUEL" PRIMARY KEY ("P_CODE", "PV_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUELINK" MODIFY ("P_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUELINK" MODIFY ("PV_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_PROPERTYVALUES
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUES" ADD CONSTRAINT "PK_T_PRODUCTMGR_PROPERTYVALUES" PRIMARY KEY ("PV_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUES" MODIFY ("PV_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_SORTS
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_SORTS" ADD CONSTRAINT "PK_T_PRODUCTMGR_SORTS" PRIMARY KEY ("SORT_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_SORTS" MODIFY ("SORT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_SUPPLIERSCONTRACT
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_SUPPLIERSCONTRACT" ADD CONSTRAINT "PK_T_PRODUCTMGR_SUPPLIERSCONTR" PRIMARY KEY ("C_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_SUPPLIERSCONTRACT" MODIFY ("C_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_PRODUCTMGR_SUPPLIERSPRODUCT
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_SUPPLIERSPRODUCT" ADD CONSTRAINT "PK_T_PRODUCTMGR_SUPPLIERSPRODU" PRIMARY KEY ("SP_ID") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_SUPPLIERSPRODUCT" MODIFY ("SP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SALESMGR_ORDER
--------------------------------------------------------

  ALTER TABLE "T_SALESMGR_ORDER" ADD CONSTRAINT "PK_T_SALESMGR_ORDER" PRIMARY KEY ("ORDERNO") ENABLE;
 
  ALTER TABLE "T_SALESMGR_ORDER" MODIFY ("ORDERNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SALESMGR_ORDER_DETAIL
--------------------------------------------------------

  ALTER TABLE "T_SALESMGR_ORDER_DETAIL" ADD CONSTRAINT "PK_T_SALESMGR_ORDER_DETAIL" PRIMARY KEY ("DETAILID") ENABLE;
 
  ALTER TABLE "T_SALESMGR_ORDER_DETAIL" MODIFY ("DETAILID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SALESMGR_ORDER_LOG
--------------------------------------------------------

  ALTER TABLE "T_SALESMGR_ORDER_LOG" ADD CONSTRAINT "PK_T_SALESMGR_ORDER_LOG" PRIMARY KEY ("LOGID") ENABLE;
 
  ALTER TABLE "T_SALESMGR_ORDER_LOG" MODIFY ("LOGID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SALESMGR_REQ_PRODUCT
--------------------------------------------------------

  ALTER TABLE "T_SALESMGR_REQ_PRODUCT" ADD CONSTRAINT "PK_T_SALESMGR_REQ_PRODUCT" PRIMARY KEY ("PRODUCTID") ENABLE;
 
  ALTER TABLE "T_SALESMGR_REQ_PRODUCT" MODIFY ("PRODUCTID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ACCOUNT
--------------------------------------------------------

  ALTER TABLE "T_SYS_ACCOUNT" ADD CONSTRAINT "PK1" PRIMARY KEY ("ACCOUNTID") ENABLE;
 
  ALTER TABLE "T_SYS_ACCOUNT" MODIFY ("ACCOUNTID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ACCOUNT" MODIFY ("ACCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ACCOUNT" MODIFY ("PASSWD" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ACCOUNT" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ACTION
--------------------------------------------------------

  ALTER TABLE "T_SYS_ACTION" ADD CONSTRAINT "PK5" PRIMARY KEY ("ACTIONID") ENABLE;
 
  ALTER TABLE "T_SYS_ACTION" MODIFY ("ACTIONID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ACTION" MODIFY ("ACTIONNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ACTION" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_FIELD
--------------------------------------------------------

  ALTER TABLE "T_SYS_FIELD" ADD CONSTRAINT "PK14" PRIMARY KEY ("FIELDID") ENABLE;
 
  ALTER TABLE "T_SYS_FIELD" MODIFY ("FIELDID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_FIELD" MODIFY ("MENUID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_MENU
--------------------------------------------------------

  ALTER TABLE "T_SYS_MENU" ADD CONSTRAINT "PK4" PRIMARY KEY ("MENUID") ENABLE;
 
  ALTER TABLE "T_SYS_MENU" MODIFY ("MENUID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_MENU" MODIFY ("MENUNAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_MENU" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_MENU" MODIFY ("SORTORDER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ORGANIZE
--------------------------------------------------------

  ALTER TABLE "T_SYS_ORGANIZE" ADD CONSTRAINT "PK9" PRIMARY KEY ("ORGANIZEID") ENABLE;
 
  ALTER TABLE "T_SYS_ORGANIZE" MODIFY ("ORGANIZEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ORGANIZE" MODIFY ("FULLNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ROLE
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLE" ADD CONSTRAINT "PK2" PRIMARY KEY ("ROLEID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLE" MODIFY ("ROLEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLE" MODIFY ("ROLENAME" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLE" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLE" MODIFY ("ORGANIZEID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ROLEACTION
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEACTION" ADD CONSTRAINT "PK7" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEACTION" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEACTION" MODIFY ("ROLEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEACTION" MODIFY ("ACTIONID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ROLEFIELD
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEFIELD" ADD CONSTRAINT "PK21" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEFIELD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEFIELD" MODIFY ("ROLEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEFIELD" MODIFY ("FIELDID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ROLEMENU
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEMENU" ADD CONSTRAINT "PK6" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEMENU" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEMENU" MODIFY ("ROLEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEMENU" MODIFY ("MENUID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ROLEORGANIZE
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEORGANIZE" ADD CONSTRAINT "PK23" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEORGANIZE" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEORGANIZE" MODIFY ("ORGANIZEID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEORGANIZE" MODIFY ("ROLEID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_ROLEUSER
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEUSER" ADD CONSTRAINT "PK3" PRIMARY KEY ("ID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEUSER" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEUSER" MODIFY ("ACCOUNTID" NOT NULL ENABLE);
 
  ALTER TABLE "T_SYS_ROLEUSER" MODIFY ("ROLEID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_SYS_WRITELOG
--------------------------------------------------------

  ALTER TABLE "T_SYS_WRITELOG" MODIFY ("SYNC_STATE" NOT NULL ENABLE);
--------------------------------------------------------
--  DDL for Index INDEX_T_SALESMGR_ORDER_DETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "INDEX_T_SALESMGR_ORDER_DETAIL" ON "T_SALESMGR_ORDER_DETAIL" ("ORDERNO") 
  ;
--------------------------------------------------------
--  DDL for Index INDEX_T_SALESMGR_ORDER_LOG
--------------------------------------------------------

  CREATE UNIQUE INDEX "INDEX_T_SALESMGR_ORDER_LOG" ON "T_SALESMGR_ORDER_LOG" ("ORDERNO") 
  ;
--------------------------------------------------------
--  DDL for Index INDX_EXCHANGEGOODS_EXCHANGEID
--------------------------------------------------------

  CREATE INDEX "INDX_EXCHANGEGOODS_EXCHANGEID" ON "T_AFTERSRV_EXCHANGEGOODS" ("EXCHANGEID") 
  ;
--------------------------------------------------------
--  DDL for Index INDX_EXCHANGE_WORKORDERID
--------------------------------------------------------

  CREATE INDEX "INDX_EXCHANGE_WORKORDERID" ON "T_AFTERSRV_EXCHANGE" ("WORKORDERID") 
  ;
--------------------------------------------------------
--  DDL for Index INDX_RETURNGOODS_RETURNID
--------------------------------------------------------

  CREATE INDEX "INDX_RETURNGOODS_RETURNID" ON "T_AFTERSRV_RETURNGOODS" ("RETURNID") 
  ;
--------------------------------------------------------
--  DDL for Index INDX_RETURN_WORKORDERID
--------------------------------------------------------

  CREATE INDEX "INDX_RETURN_WORKORDERID" ON "T_AFTERSRV_RETURN" ("WORKORDERID") 
  ;
--------------------------------------------------------
--  DDL for Index INDX_WORKORDERLOG_WORKORDERID
--------------------------------------------------------

  CREATE INDEX "INDX_WORKORDERLOG_WORKORDERID" ON "T_AFTERSRV_WORKORDERLOG" ("WORKORDERID") 
  ;
--------------------------------------------------------
--  DDL for Index PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK1" ON "T_SYS_ACCOUNT" ("ACCOUNTID") 
  ;
--------------------------------------------------------
--  DDL for Index PK14
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK14" ON "T_SYS_FIELD" ("FIELDID") 
  ;
--------------------------------------------------------
--  DDL for Index PK2
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK2" ON "T_SYS_ROLE" ("ROLEID") 
  ;
--------------------------------------------------------
--  DDL for Index PK21
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK21" ON "T_SYS_ROLEFIELD" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK23
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK23" ON "T_SYS_ROLEORGANIZE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK3
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK3" ON "T_SYS_ROLEUSER" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK4
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK4" ON "T_SYS_MENU" ("MENUID") 
  ;
--------------------------------------------------------
--  DDL for Index PK5
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK5" ON "T_SYS_ACTION" ("ACTIONID") 
  ;
--------------------------------------------------------
--  DDL for Index PK6
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK6" ON "T_SYS_ROLEMENU" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK7
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK7" ON "T_SYS_ROLEACTION" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK8
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK8" ON "T_BASIC_EMP" ("EMPID") 
  ;
--------------------------------------------------------
--  DDL for Index PK9
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK9" ON "T_SYS_ORGANIZE" ("ORGANIZEID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_ADDRESS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ADDRESS" ON "T_CLIENTMGR_ADDRESS" ("ADDRESSID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AREA
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AREA" ON "T_BASE_AREA" ("AREAID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_BANK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_BANK" ON "T_BASE_BANK" ("BANKID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_BILLTEMPLATE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_BILLTEMPLATE" ON "T_BASE_BILLTEMPLATE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_CONTRACTTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_CONTRACTTYPE" ON "T_BASE_CONTRACTTYPE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_DEPOSITSET
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_DEPOSITSET" ON "T_CLIENTMGR_DEPOSITSET" ("DEPOSITID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_EXCHANGE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_EXCHANGE" ON "T_AFTERSRV_EXCHANGE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_EXCHANGESTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_EXCHANGESTATUS" ON "T_BASE_EXCHANGESTATUS" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_EXPORTLOG
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_EXPORTLOG" ON "T_BASE_EXPORTLOG" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_GRADE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_GRADE" ON "T_CLIENTMGR_GRADE" ("GRADEID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_INFO
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_INFO" ON "T_CLIENTMGR_INFO" ("CLIENTID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_INTERFACE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_INTERFACE" ON "T_LOGISTICMGR_INTERFACE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_INTERFACETYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_INTERFACETYPE" ON "T_BASE_INTERFACETYPE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_LOGISTIC
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_LOGISTIC" ON "T_LOGISTICMGR_LOGISTIC" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_LOGISTICLEVEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_LOGISTICLEVEL" ON "T_BASE_LOGISTICLEVEL" ("COMPANYID", "LOGISTICID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_LOGISTICORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_LOGISTICORDER" ON "T_LOGISTICMGR_LOGISTICORDER" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_LOGISTICSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_LOGISTICSTATUS" ON "T_BASE_LOGISTICSTATUS" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_LOGISTICSTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_LOGISTICSTYPE" ON "T_BASE_LOGISTICTYPE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_MSG
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_MSG" ON "T_BASE_MSG" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_OPERATEHISTORY
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_OPERATEHISTORY" ON "T_CLIENTMGR_OPERATEHISTORY" ("OPERATEID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_ORDERSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ORDERSTATUS" ON "T_BASE_ORDERSTATUS" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_ORDERTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ORDERTYPE" ON "T_BASE_ORDERTYPE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_OUTEORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_OUTEORDER" ON "T_LOGISTICMGR_OUTEORDER" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_OUTEORDER_DETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_OUTEORDER_DETAIL" ON "T_LOGISTICMGR_OUTEORDER_DETAIL" ("ORDERID", "OUTORDERID", "PRODUCTID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_OUTORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_OUTORDER" ON "T_LOGISTICMGR_OUTORDER" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_OUTORDER_DETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_OUTORDER_DETAIL" ON "T_LOGISTICMGR_OUTORDER_DETAIL" ("ORDERID", "OUTORDERID", "PRODUCTID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_OUTRORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_OUTRORDER" ON "T_LOGISTICMGR_OUTRORDER" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_OUTRORDER_DETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_OUTRORDER_DETAIL" ON "T_LOGISTICMGR_OUTRORDER_DETAIL" ("ORDERID", "OUTORDERID", "PRODUCTID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_PAYTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_PAYTYPE" ON "T_BASE_PAYTYPE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_PHONE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_PHONE" ON "T_CLIENTMGR_PHONE" ("PHONEID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_RETUANSTATUS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_RETUANSTATUS" ON "T_BASE_RETURNSTATUS" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_RETURN
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_RETURN" ON "T_AFTERSRV_RETURN" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_SCOPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_SCOPE" ON "T_LOGISTICMGR_SCOPE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_SUPPLIER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_SUPPLIER" ON "T_BASE_SUPPLIER" ("SUPCODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_SUPPLIERLEVEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_SUPPLIERLEVEL" ON "T_BASE_SUPPLIERLEVEL" ("COMPANYID", "SUPPLIERID", "PRODUCTID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_SUPTYPE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_SUPTYPE" ON "T_BASE_SUPTYPE" ("ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_FINANCINGMGR_ACCOUNT
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_FINANCINGMGR_ACCOUNT" ON "T_FINANCINGMGR_ACCOUNT" ("ACCOUNTNO") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_FINANCINGMGR_RECORDED
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_FINANCINGMGR_RECORDED" ON "T_FINANCINGMGR_RECORDED" ("RECORDEDNO") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_AREACONTRACTLI
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_AREACONTRACTLI" ON "T_PRODUCTMGR_AREACONTRACTLINK" ("ACL_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_DELIVERY
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_DELIVERY" ON "T_PRODUCTMGR_DELIVERY" ("D_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_DEPTMENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_DEPTMENT" ON "T_PRODUCTMGR_DEPTMENT" ("DEPT_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_DEPTMENTLINK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_DEPTMENTLINK" ON "T_PRODUCTMGR_DEPTMENTLINK" ("DEPT_CODE", "C_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_PRODUCTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_PRODUCTS" ON "T_PRODUCTMGR_PRODUCTS" ("P_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_PRODUCTSHOW
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_PRODUCTSHOW" ON "T_PRODUCTMGR_PRODUCTSHOW" ("PSH_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_PROPERTY
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_PROPERTY" ON "T_PRODUCTMGR_PROPERTY" ("PROPERTY_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_PROPERTYLINK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_PROPERTYLINK" ON "T_PRODUCTMGR_PROPERTYLINK" ("SORT_CODE", "PROPERTY_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_PROPERTYVALUEL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_PROPERTYVALUEL" ON "T_PRODUCTMGR_PROPERTYVALUELINK" ("P_CODE", "PV_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_PROPERTYVALUES
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_PROPERTYVALUES" ON "T_PRODUCTMGR_PROPERTYVALUES" ("PV_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_SORTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_SORTS" ON "T_PRODUCTMGR_SORTS" ("SORT_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_SUPPLIERSCONTR
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_SUPPLIERSCONTR" ON "T_PRODUCTMGR_SUPPLIERSCONTRACT" ("C_CODE") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_PRODUCTMGR_SUPPLIERSPRODU
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_PRODUCTMGR_SUPPLIERSPRODU" ON "T_PRODUCTMGR_SUPPLIERSPRODUCT" ("SP_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_SALESMGR_ORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_SALESMGR_ORDER" ON "T_SALESMGR_ORDER" ("ORDERNO") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_SALESMGR_ORDER_DETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_SALESMGR_ORDER_DETAIL" ON "T_SALESMGR_ORDER_DETAIL" ("DETAILID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_SALESMGR_ORDER_LOG
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_SALESMGR_ORDER_LOG" ON "T_SALESMGR_ORDER_LOG" ("LOGID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_T_SALESMGR_REQ_PRODUCT
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_T_SALESMGR_REQ_PRODUCT" ON "T_SALESMGR_REQ_PRODUCT" ("PRODUCTID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_WORKORDER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_WORKORDER" ON "T_AFTERSRV_WORKORDER" ("ID") 
  ;























--------------------------------------------------------
--  Ref Constraints for Table T_BASE_SUPPLIER
--------------------------------------------------------

  ALTER TABLE "T_BASE_SUPPLIER" ADD CONSTRAINT "FK_SUPPLIER_SUPTYPE" FOREIGN KEY ("TYPECODE")
	  REFERENCES "T_BASE_SUPTYPE" ("ID") ENABLE;



--------------------------------------------------------
--  Ref Constraints for Table T_CLIENTMGR_ADDRESS
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_ADDRESS" ADD CONSTRAINT "PK_ADDRESS_INFO" FOREIGN KEY ("CLIENTID")
	  REFERENCES "T_CLIENTMGR_INFO" ("CLIENTID") ENABLE;


--------------------------------------------------------
--  Ref Constraints for Table T_CLIENTMGR_INFO
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_INFO" ADD CONSTRAINT "FK_INFO_GRADE" FOREIGN KEY ("GRADEID")
	  REFERENCES "T_CLIENTMGR_GRADE" ("GRADEID") ENABLE;

--------------------------------------------------------
--  Ref Constraints for Table T_CLIENTMGR_PHONE
--------------------------------------------------------

  ALTER TABLE "T_CLIENTMGR_PHONE" ADD CONSTRAINT "FK_PHONE_INFO" FOREIGN KEY ("CLIENTID")
	  REFERENCES "T_CLIENTMGR_INFO" ("CLIENTID") ENABLE;












--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_AREACONTRACTLINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_AREACONTRACTLINK" ADD CONSTRAINT "FK_ACL_SUPCONTRACT" FOREIGN KEY ("C_CODE")
	  REFERENCES "T_PRODUCTMGR_SUPPLIERSCONTRACT" ("C_CODE") ENABLE;


--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_DEPTMENTLINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_DEPTMENTLINK" ADD CONSTRAINT "FK_DEPTMENT_SUPCONTRACT2" FOREIGN KEY ("C_CODE")
	  REFERENCES "T_PRODUCTMGR_SUPPLIERSCONTRACT" ("C_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_DEPTMENTLINK" ADD CONSTRAINT "FK_ORGANIZE_CONTRACT" FOREIGN KEY ("DEPT_CODE")
	  REFERENCES "T_SYS_ORGANIZE" ("ORGANIZEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_PRODUCTS
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PRODUCTS" ADD CONSTRAINT "FK_SORTS_PRODUCT" FOREIGN KEY ("SORT_CODE")
	  REFERENCES "T_PRODUCTMGR_SORTS" ("SORT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_PRODUCTSHOW
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PRODUCTSHOW" ADD CONSTRAINT "FK_PRODUCT_PRODUCTSHOW" FOREIGN KEY ("P_CODE")
	  REFERENCES "T_PRODUCTMGR_PRODUCTS" ("P_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PRODUCTSHOW" ADD CONSTRAINT "FK_SORTS_PRODUCTSHOW" FOREIGN KEY ("SORT_CODE")
	  REFERENCES "T_PRODUCTMGR_SORTS" ("SORT_CODE") ENABLE;

--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_PROPERTYLINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PROPERTYLINK" ADD CONSTRAINT "FK_SORTS_PROPERTY" FOREIGN KEY ("SORT_CODE")
	  REFERENCES "T_PRODUCTMGR_SORTS" ("SORT_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTYLINK" ADD CONSTRAINT "FK_SORTS_PROPERTY2" FOREIGN KEY ("PROPERTY_CODE")
	  REFERENCES "T_PRODUCTMGR_PROPERTY" ("PROPERTY_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_PROPERTYVALUELINK
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUELINK" ADD CONSTRAINT "FK_SUPRODUCT_PVALUES" FOREIGN KEY ("P_CODE")
	  REFERENCES "T_PRODUCTMGR_PRODUCTS" ("P_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUELINK" ADD CONSTRAINT "FK_SUPRODUCT_PVALUES2" FOREIGN KEY ("PV_CODE")
	  REFERENCES "T_PRODUCTMGR_PROPERTYVALUES" ("PV_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_PROPERTYVALUES
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_PROPERTYVALUES" ADD CONSTRAINT "FK_PROPERTY_PVALUES" FOREIGN KEY ("PROPERTY_CODE")
	  REFERENCES "T_PRODUCTMGR_PROPERTY" ("PROPERTY_CODE") ENABLE;


--------------------------------------------------------
--  Ref Constraints for Table T_PRODUCTMGR_SUPPLIERSPRODUCT
--------------------------------------------------------

  ALTER TABLE "T_PRODUCTMGR_SUPPLIERSPRODUCT" ADD CONSTRAINT "FK_PRODUCT_SPRODUCT" FOREIGN KEY ("P_CODE")
	  REFERENCES "T_PRODUCTMGR_PRODUCTS" ("P_CODE") ENABLE;
 
  ALTER TABLE "T_PRODUCTMGR_SUPPLIERSPRODUCT" ADD CONSTRAINT "FK_SUPCONTRACT_SUPPRODUCT" FOREIGN KEY ("C_CODE")
	  REFERENCES "T_PRODUCTMGR_SUPPLIERSCONTRACT" ("C_CODE") ENABLE;

--------------------------------------------------------
--  Ref Constraints for Table T_SALESMGR_ORDER_DETAIL
--------------------------------------------------------

  ALTER TABLE "T_SALESMGR_ORDER_DETAIL" ADD CONSTRAINT "FK_ORDERDETAIL_ORDER" FOREIGN KEY ("ORDERNO")
	  REFERENCES "T_SALESMGR_ORDER" ("ORDERNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_SALESMGR_ORDER_LOG
--------------------------------------------------------

  ALTER TABLE "T_SALESMGR_ORDER_LOG" ADD CONSTRAINT "FK_ORDERLOG_ORDER" FOREIGN KEY ("ORDERNO")
	  REFERENCES "T_SALESMGR_ORDER" ("ORDERNO") ENABLE;






--------------------------------------------------------
--  Ref Constraints for Table T_SYS_ROLE
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLE" ADD CONSTRAINT "REFT_SYS_ORGANIZE32" FOREIGN KEY ("ORGANIZEID")
	  REFERENCES "T_SYS_ORGANIZE" ("ORGANIZEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_SYS_ROLEACTION
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEACTION" ADD CONSTRAINT "REFT_SYS_ACTION7" FOREIGN KEY ("ACTIONID")
	  REFERENCES "T_SYS_ACTION" ("ACTIONID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEACTION" ADD CONSTRAINT "REFT_SYS_ROLE6" FOREIGN KEY ("ROLEID")
	  REFERENCES "T_SYS_ROLE" ("ROLEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_SYS_ROLEFIELD
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEFIELD" ADD CONSTRAINT "REFT_SYS_FIELD43" FOREIGN KEY ("FIELDID")
	  REFERENCES "T_SYS_FIELD" ("FIELDID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEFIELD" ADD CONSTRAINT "REFT_SYS_ROLE40" FOREIGN KEY ("ROLEID")
	  REFERENCES "T_SYS_ROLE" ("ROLEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_SYS_ROLEMENU
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEMENU" ADD CONSTRAINT "REFT_SYS_MENU4" FOREIGN KEY ("MENUID")
	  REFERENCES "T_SYS_MENU" ("MENUID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEMENU" ADD CONSTRAINT "REFT_SYS_ROLE3" FOREIGN KEY ("ROLEID")
	  REFERENCES "T_SYS_ROLE" ("ROLEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_SYS_ROLEORGANIZE
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEORGANIZE" ADD CONSTRAINT "REFT_SYS_ORGANIZE36" FOREIGN KEY ("ORGANIZEID")
	  REFERENCES "T_SYS_ORGANIZE" ("ORGANIZEID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEORGANIZE" ADD CONSTRAINT "REFT_SYS_ROLE37" FOREIGN KEY ("ROLEID")
	  REFERENCES "T_SYS_ROLE" ("ROLEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_SYS_ROLEUSER
--------------------------------------------------------

  ALTER TABLE "T_SYS_ROLEUSER" ADD CONSTRAINT "REFT_SYS_ACCOUNT1" FOREIGN KEY ("ACCOUNTID")
	  REFERENCES "T_SYS_ACCOUNT" ("ACCOUNTID") ENABLE;
 
  ALTER TABLE "T_SYS_ROLEUSER" ADD CONSTRAINT "REFT_SYS_ROLE2" FOREIGN KEY ("ROLEID")
	  REFERENCES "T_SYS_ROLE" ("ROLEID") ENABLE;

--------------------------------------------------------
--  DDL for Trigger TR_ADDRESS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_ADDRESS" 
  before insert on t_clientmgr_address  
  for each row
declare
  next_id number;
begin
  select seq_address.nextval into next_id from dual;
  :new.addressid:=next_id;
end tr_address;

/
ALTER TRIGGER "TR_ADDRESS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_DEPOSITSET
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_DEPOSITSET" 
  before insert on t_clientmgr_depositset  
  for each row
declare
  next_id number;
begin
  select seq_depositset.nextval into next_id from dual;
  :new.depositid:=next_id;
end tr_depositset;

/
ALTER TRIGGER "TR_DEPOSITSET" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_GRADE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_GRADE" 
  before insert on t_clientmgr_grade  
  for each row
declare
  next_id number;
begin
  select seq_grade.nextval into next_id from dual;
  :new.gradeid:=next_id;  
end tr_grade;

/
ALTER TRIGGER "TR_GRADE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_OPERATEHISTORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_OPERATEHISTORY" 
  before insert on t_clientmgr_operatehistory  
  for each row
declare
  next_id number;
begin
  select seq_operatehistory.nextval into next_id from dual;
  :new.operateid:=next_id; 
end tr_operatehistory;

/
ALTER TRIGGER "TR_OPERATEHISTORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TR_PHONE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TR_PHONE" 
  before insert on t_clientmgr_phone  
  for each row
declare
  next_id number;
begin
  select seq_phone.nextval into next_id from dual;
  :new.phoneid:=next_id; 
end tr_phone;

/
ALTER TRIGGER "TR_PHONE" ENABLE;
--------------------------------------------------------
--  DDL for View V_AFTERSRV_EXCHANGE
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_AFTERSRV_EXCHANGE" ("ID", "WORKORDERID", "COMPANYID", "USERID", "USERNAME", "USERADDRESS", "USERPHONE", "USERMOBILE", "USERZIPCODE", "INDATE", "STATUS", "REMARK", "CHANGELOG") AS 
  select
       c.id, c.workorderid, c.companyid, c.userid, c.username, c.useraddress, c.userphone,
       c.usermobile, c.userzipcode, c.indate, (select s.name from t_base_orderstatus s where s.status='1' and s.id=c.status) as status,
       c.remark, c.changelog
from t_aftersrv_exchange c
;
--------------------------------------------------------
--  DDL for View V_AFTERSRV_RETURN
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_AFTERSRV_RETURN" ("ID", "WORKORDERID", "COMPANYID", "USERID", "USERNAME", "USERADDRESS", "USERPHONE", "USERMOBILE", "USERZIPCODE", "GOODSTOTALPRICE", "INDATE", "STATUS", "REMARK", "CHANGELOG") AS 
  select
       r.id, r.workorderid, r.companyid, r.userid, r.username, r.useraddress, r.userphone,
       r.usermobile, r.userzipcode, r.goodstotalprice, r.indate, (select s.name from t_base_orderstatus s where s.status='1' and s.id=r.status) as status,
       r.remark, r.changelog
from t_aftersrv_return r
;
--------------------------------------------------------
--  DDL for View V_CUSTOMERMGR_INFO
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_CUSTOMERMGR_INFO" ("CLIENTID", "CLIENTNAME", "GRADEID", "COMPANYID", "CLIENTDEPOSIT", "CLIENTSEX", "ADDDATE", "CLIENTBIRTHDAY", "CLIENTSTATE", "INVALIDATEDATE", "CLIENTCOMPANY", "CLIENTDUTY", "CLIENTOCC", "CERTTYPE", "CERTNUMBER", "POSTALCODE", "TOTALCONSUME", "REMARK", "ADDRESSID", "PROVINCE", "CITY", "BOROUGH", "DETAILADDR", "PHONE") AS 
  select a.*,b.addressid,b.province,b.city,b.borough,b.detailaddr,c.phone
              from t_clientmgr_info a inner join t_clientmgr_address b on a.clientid = b.clientid and b.defaultaddr='1' inner join t_clientmgr_phone c
                on a.clientid = c.clientid and c.defaultflag='1'
;
--------------------------------------------------------
--  DDL for View V_LGSTPLAT_LCORDER_LIST
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGSTPLAT_LCORDER_LIST" ("COMPANYID", "CREATEDATE", "ID", "LOGISTICID", "LOGISTICNAME", "STATUS", "STATUSNAME", "OUTORDERID", "TYPE", "TYPENAME", "ORDERID") AS 
  SELECT a.companyid, a.createdate, a.id,
	a.logisticid, a.logisticname,
	a.status, b.name as statusname,
	a.outorderid,
	a.type, c.name as typename,
	a.orderid

FROM t_logisticmgr_logisticorder a
LEFT JOIN t_base_logisticstatus b
	ON a.status=b.id and b.status=1
LEFT JOIN t_base_ordertype c
	ON a.type=c.id and c.status=1
;
--------------------------------------------------------
--  DDL for View V_LGSTPLAT_LORDER_INFO
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGSTPLAT_LORDER_INFO" ("COMPANYID", "CREATEDATE", "ORDERID", "OUTORDERID", "ORDERTYPE", "TYPENAME", "ID", "OLDID", "IDFROMLOGISTIC", "OLDIDFROMLOGISTIC", "LOGISTICID", "LOGISTICNAME", "STATUS", "STATUSNAME", "ARRIVEDATE", "TOTALAMOUNT", "COSTTO", "TYPE") AS 
  SELECT companyid, createdate, orderid, outorderid,
	ordertype, c.name as typename,
	id, oldid,
	idfromlogistic, oldidfromlogistic,
	logisticid, logisticname,
	status, b.name as statusname,
	arrivedate, totalamount, cost as costto, type
FROM t_logisticmgr_logisticorder a
LEFT JOIN t_base_logisticstatus b
	ON a.status=b.id and b.status=1
LEFT JOIN t_base_ordertype c
	ON a.type=c.id and c.status=1
;
--------------------------------------------------------
--  DDL for View V_LGSTPLAT_OUTEORDER_INFO
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGSTPLAT_OUTEORDER_INFO" ("COMPANYID", "CREATEDATE", "ORDERID", "ORDERSTATUS", "ORDERSTATUSNAME", "ID", "OLDID", "IDFROMSUPPLIER", "OLDIDFROMSUPPLIER", "SUPPLIERID", "SUPPLIERNAME", "STATUS", "STATUSNAME", "AMOUNT", "COSTFROM", "USERID", "NAME", "POST", "PROVINCE", "PROVINCENAME", "CITY", "CITYNAME", "AREA", "AREANAME", "ADDRESS", "TEL", "REMARK") AS 
  SELECT a.companyid, a.createdate, a.orderid,
	b2.status as orderstatus, c3.name as orderstatusname,
	a.id, a.oldid,
	a.idfromsupplier, a.oldidfromsupplier,
	a.supplierid, a.suppliername,
	a.status, c31.name as statusname,
	a.amount, a.cost as costfrom,
	b2.userid, b2.username as name, b4.postalcode as post,
	b3.province, c50.areaname as provincename,
	b3.city, c51.areaname as cityname,
	b3.borough as area, c52.areaname as areaname,
	b3.detailaddr as address, b5.phone as tel,
	b2.remark
FROM t_logisticmgr_outrorder a
LEFT JOIN t_aftersrv_exchange b2
	ON a.orderid=b2.id
LEFT JOIN t_clientmgr_address b3
	ON b2.userid=b3.clientid and defaultaddr=1
LEFT JOIN t_clientmgr_info b4
	ON b2.userid=b4.clientid
LEFT JOIN t_clientmgr_phone b5
	ON b2.userid=b3.clientid and defaultflag=1
LEFT JOIN t_base_orderstatus c3
	ON b2.status=c3.id and c3.status=1 and c3.type=2
LEFT JOIN t_base_area c50
	ON c50.areaid=b3.province and c50.areagrade=0
LEFT JOIN t_base_area c51
	ON c51.areaid=b3.city and c51.areagrade=1
LEFT JOIN t_base_area c52
	ON c52.areaid=b3.borough and c52.areagrade=2
LEFT JOIN t_base_orderstatus c31
	ON a.status=c31.id and c31.status=1 and c31.type=2
;
--------------------------------------------------------
--  DDL for View V_LGST_ELORDER_LIST
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_ELORDER_LIST" ("COMPANYID", "CREATEDATE", "ORDERID", "ORDERSTATUS", "ORDERSTATUSNAME", "ID", "OLDID", "IDFROMSUPPLIER", "OLDIDFROMSUPPLIER", "SUPPLIERID", "SUPPLIERNAME", "STATUS", "STATUSNAME", "AMOUNT", "COSTFROM", "LOGISTICORDERID", "OLDLOGISTICORDERID", "IDFROMLOGISTIC", "OLDIDFROMLOGISTIC", "LOGISTICID", "LOGISTICNAME", "LOGISTICORDERSTATUS", "LOGISTICORDERSTATUSNAME", "ARRIVEDATE", "TOTALAMOUNT", "COSTTO", "USERID", "NAME", "POST", "PROVINCE", "PROVINCENAME", "CITY", "CITYNAME", "AREA", "AREANAME", "ADDRESS", "TEL", "REMARK", "TYPE") AS 
  SELECT a.companyid, a.createdate, a.orderid,
	b2.status as orderstatus, c3.name as orderstatusname,
	a.id, a.oldid,
	a.idfromsupplier, a.oldidfromsupplier,
	a.supplierid, a.suppliername,
	a.status, c31.name as statusname,
	a.amount, a.cost as costfrom,
	b1.id as logisticorderid, b1.oldid as oldlogisticorderid,
	b1.idfromlogistic, b1.oldidfromlogistic,
	b1.logisticid, b1.logisticname,
	b1.status as logisticorderstatus, c41.name as logisticorderstatusname,
	b1.arrivedate, b1.totalamount, b1.cost as costto,
	b2.userid, b2.username as name, b4.postalcode as post,
	b3.province, c50.areaname as provincename,
	b3.city, c51.areaname as cityname,
	b3.borough as area, c52.areaname as areaname,
	b3.detailaddr as address, b5.phone as tel,
	b2.remark, b1.type

FROM t_logisticmgr_outrorder a
LEFT JOIN t_logisticmgr_logisticorder b1
	ON a.id=b1.outorderid and b1.ordertype=2
LEFT JOIN t_aftersrv_exchange b2
	ON a.orderid=b2.id
LEFT JOIN t_clientmgr_address b3
	ON b2.userid=b3.clientid and defaultaddr=1
LEFT JOIN t_clientmgr_info b4
	ON b2.userid=b4.clientid
LEFT JOIN t_clientmgr_phone b5
	ON b2.userid=b3.clientid and defaultflag=1

LEFT JOIN t_base_orderstatus c3
	ON b2.status=c3.id and c3.status=1 and c3.type=2
LEFT JOIN t_base_area c50
	ON c50.areaid=b3.province and c50.areagrade=0
LEFT JOIN t_base_area c51
	ON c51.areaid=b3.city and c51.areagrade=1
LEFT JOIN t_base_area c52
	ON c52.areaid=b3.borough and c52.areagrade=2
LEFT JOIN t_base_orderstatus c31
	ON a.status=c31.id and c31.status=1 and c31.type=2
LEFT JOIN t_base_logisticstatus c41
	ON b1.status=c41.id and c41.status=1
;
--------------------------------------------------------
--  DDL for View V_LGST_EORDER_LIST
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_EORDER_LIST" ("COMPANYID", "CREATEDATE", "ID", "STATUS", "STATUSNAME", "NAME", "PROVINCE", "PROVINCENAME", "CITY", "CITYNAME", "AREA", "AREANAME") AS 
  SELECT a.companyid, a.indate as createdate, a.id,
	a.status, c3.name as statusname,
	a.username as name,
	b.province, c50.areaname as provincename,
	b.city, c51.areaname as cityname,
	b.borough as area, c52.areaname as areaname
FROM t_aftersrv_exchange a
LEFT JOIN t_clientmgr_address b
	ON a.userid=b.clientid and defaultaddr=1
LEFT JOIN t_base_orderstatus c3
	ON a.status=c3.id and c3.status=1 and c3.type=2
LEFT JOIN t_base_area c50
	ON c50.areaid=b.province and c50.areagrade=0
LEFT JOIN t_base_area c51
	ON c51.areaid=b.city and c51.areagrade=1
LEFT JOIN t_base_area c52
	ON c52.areaid=b.borough and c52.areagrade=2
;
--------------------------------------------------------
--  DDL for View V_LGST_OLORDER_INFO
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_OLORDER_INFO" ("COMPANYID", "CREATEDATE", "ORDERID", "ORDERPAYTYPE", "ORDERPAYTYPENAME", "ORDERLOGISTICTYPE", "ORDERLOGISTICTYPENAME", "ORDERSTATUS", "ORDERSTATUSNAME", "ORDERLOGISTICSTATUS", "ORDERLOGISTICSTATUSNAME", "ID", "IDFROMSUPPLIER", "SUPPLIERID", "SUPPLIERNAME", "STATUS", "STATUSNAME", "AMOUNT", "COSTFROM", "LOGISTICORDERID", "IDFROMLOGISTIC", "LOGISTICID", "LOGISTICNAME", "LOGISTICORDERSTATUS", "LOGISTICORDERSTATUSNAME", "ARRIVEDATE", "TOTALAMOUNT", "COSTTO", "CUSTOMERID", "NAME", "POST", "PROVINCE", "PROVINCENAME", "CITY", "CITYNAME", "AREA", "AREANAME", "ADDRESS", "TEL", "REMARK") AS 
  SELECT a.companyid, a.createdate, a.orderid,
	b2.paytypeid as orderpaytype, c1.name as orderpaytypename,
	b2.logistictypeid as orderlogistictype, c2.name as orderlogistictypename,
	b2.statusid as orderstatus, c3.name as orderstatusname,
	b2.shipstate as orderlogisticstatus, c4.name as orderlogisticstatusname,
	a.id, a.idfromsupplier, a.supplierid, a.suppliername,
	a.status, c31.name as statusname,
	a.amount, a.cost as costfrom,
	b1.id as logisticorderid, b1.idfromlogistic,
	b1.logisticid, b1.logisticname,
	b1.status as logisticorderstatus, c41.name as logisticorderstatusname,
	b1.arrivedate, b1.totalamount, b1.cost as costto,
	b2.customerid, b2.consigneename as name, b4.postalcode as post,
	b3.province, c50.areaname as provincename,
	b3.city, c51.areaname as cityname,
	b3.borough as area, c52.areaname as areaname,
	b3.detailaddr as address, b5.phone as tel,
	b2.remark

FROM t_logisticmgr_outorder a
LEFT JOIN t_logisticmgr_logisticorder b1
	ON a.id=b1.outorderid and b1.ordertype=0
LEFT JOIN t_salesmgr_order b2
	ON a.orderid=b2.orderno
LEFT JOIN t_clientmgr_address b3
	ON b2.customerid=b3.clientid and defaultaddr=1
LEFT JOIN t_clientmgr_info b4
	ON b2.customerid=b4.clientid
LEFT JOIN t_clientmgr_phone b5
	ON b2.customerid=b3.clientid and defaultflag=1

LEFT JOIN t_base_paytype c1
	ON b2.paytypeid=c1.id and c1.status=1
LEFT JOIN t_base_logistictype c2
	ON b2.logistictypeid=c2.id and c2.status=1
LEFT JOIN t_base_orderstatus c3
	ON b2.statusid=c3.id and c3.status=1
LEFT JOIN t_base_logisticstatus c4
	ON b2.shipstate=c4.id and c4.status=1
LEFT JOIN t_base_area c50
	ON c50.areaid=b3.province and c50.areagrade=0
LEFT JOIN t_base_area c51
	ON c51.areaid=b3.city and c51.areagrade=1
LEFT JOIN t_base_area c52
	ON c52.areaid=b3.borough and c52.areagrade=2
LEFT JOIN t_base_orderstatus c31
	ON a.status=c31.id and c31.status=1
LEFT JOIN t_base_logisticstatus c41
	ON b1.status=c41.id and c41.status=1
;
--------------------------------------------------------
--  DDL for View V_LGST_ORDER_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_ORDER_DETAIL" ("COMPANYID", "ORDERID", "PRODUCTID", "PRODUCTNAME", "PRODUCTTYPE", "PRODUCTUNIT", "PRICE", "NUM", "AMOUNT", "REMARK") AS 
  SELECT a.companyid, a.orderno as orderid, a.productcode as productid,
	b.p_name as productname, b.p_type as producttype, b.p_jiliang as productunit,
	a.memberprice as price, a.orderqty as num, a.amountprice as amount, a.remark
FROM t_salesmgr_order_detail a
JOIN t_productmgr_products b
ON a.productcode=b.p_code
;
--------------------------------------------------------
--  DDL for View V_LGST_ORDER_LIST
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_ORDER_LIST" ("COMPANYID", "ORDERID", "ID", "NAME", "TYPE", "UNIT", "PRICE", "NUM", "AMOUNT", "REMARK") AS 
  SELECT a.companyid, a.orderno as orderid, a.productcode as id,
	b.p_name as name, b.p_type as type, b.p_jiliang as unit,
	a.memberprice as price, a.orderqty as num, a.amountprice as amount, a.remark
FROM t_salesmgr_order_detail a
JOIN t_productmgr_products b
ON a.productcode=b.p_code
;
--------------------------------------------------------
--  DDL for View V_LGST_OUTEORDER_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_OUTEORDER_DETAIL" ("ORDERID", "OUTORDERID", "PRODUCTID", "S_PCODE", "NAME", "TYPE", "UNIT", "OLDNUM", "NUM", "REMARK", "REASON", "REASONNAME") AS 
  SELECT a.orderid, a.outorderid, a.productid,
	c.sp_spcode as s_pcode, d.p_name as name, d.p_type as type,
	d.p_jiliang as unit,
	e.num as oldnum, b.goodsamount as num, b.remark,
	b.reasonid as reason, e.reason as reasonname
FROM t_logisticmgr_outeorder_detail a
LEFT JOIN t_aftersrv_exchangegoods b
	ON a.orderid=b.exchangeid and a.productid=b.goodsid
LEFT JOIN t_productmgr_suppliersproduct c
	ON a.productid=c.sp_id
LEFT JOIN t_productmgr_products d
	ON a.productid=d.p_code
LEFT JOIN t_base_reason e
	ON b.reasonid=e.id and e.status=1
LEFT JOIN t_logisticmgr_outorder_detail e
	ON a.orderid=e.orderid and a.productid=e.productid
;
--------------------------------------------------------
--  DDL for View V_LGST_OUTORDER_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_OUTORDER_DETAIL" ("COMPANYID", "ORDERID", "OUTORDERID", "PRODUCTID", "S_PCODE", "NAME", "TYPE", "UNIT", "PRICE", "NUM", "AMOUNT", "REMARK") AS 
  SELECT b.companyid, a.orderid, a.outorderid, a.productid,
	c.sp_spcode as s_pcode, d.p_name as name, d.p_type as type,
	d.p_jiliang as unit, b.memberprice as price, b.orderqty as num,
	b.amountprice as amount, b.remark
FROM t_logisticmgr_outorder_detail a
JOIN t_salesmgr_order_detail b
	ON a.orderid=b.orderno and a.productid=b.productcode
JOIN t_productmgr_suppliersproduct c
	ON a.productid=c.sp_id
JOIN t_productmgr_products d
	ON a.productid=d.p_code
;
--------------------------------------------------------
--  DDL for View V_LGST_OUTRORDER_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_OUTRORDER_DETAIL" ("ORDERID", "OUTORDERID", "PRODUCTID", "S_PCODE", "NAME", "TYPE", "UNIT", "PRICE", "OLDNUM", "NUM", "AMOUNT", "REMARK", "REASON", "REASONNAME") AS 
  SELECT a.orderid, a.outorderid, a.productid,
	c.sp_spcode as s_pcode, d.p_name as name, d.p_type as type,
	d.p_jiliang as unit, b.goodsprice as price,
	b.buyamount as oldnum, b.returnamount as num,
	(b.goodsprice*b.returnamount) as amount, b.remark,
	b.reasonid as reason, e.reason as reasonname
FROM t_logisticmgr_outrorder_detail a
LEFT JOIN t_aftersrv_returngoods b
	ON a.orderid=b.returnid and a.productid=b.goodsid
LEFT JOIN t_productmgr_suppliersproduct c
	ON a.productid=c.sp_id
LEFT JOIN t_productmgr_products d
	ON a.productid=d.p_code
LEFT JOIN t_base_reason e
	ON b.reasonid=e.id and e.status=1
;
--------------------------------------------------------
--  DDL for View V_LGST_RLORDER_INFO
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_RLORDER_INFO" ("COMPANYID", "CREATEDATE", "ORDERID", "OLDORDERID", "ORDERSTATUS", "ORDERSTATUSNAME", "ID", "OLDID", "IDFROMSUPPLIER", "OLDIDFROMSUPPLIER", "SUPPLIERID", "SUPPLIERNAME", "STATUS", "STATUSNAME", "AMOUNT", "COSTFROM", "LOGISTICORDERID", "IDFROMLOGISTIC", "OLDLOGISTICORDERID", "LOGISTICID", "LOGISTICNAME", "LOGISTICORDERSTATUS", "LOGISTICORDERSTATUSNAME", "ARRIVEDATE", "TOTALAMOUNT", "COSTTO", "USERID", "NAME", "POST", "PROVINCE", "PROVINCENAME", "CITY", "CITYNAME", "AREA", "AREANAME", "ADDRESS", "TEL", "REMARK") AS 
  SELECT a.companyid, a.createdate, a.orderid, a.oldorderid,
	b2.status as orderstatus, c3.name as orderstatusname,
	a.id, a.oldid, a.idfromsupplier, a.oldidfromsupplier,
	a.supplierid, a.suppliername,
	a.status, c31.name as statusname,
	a.amount, a.cost as costfrom,
	b1.id as logisticorderid, b1.idfromlogistic, b1.oldid as oldlogisticorderid,
	b1.logisticid, b1.logisticname,
	b1.status as logisticorderstatus, c41.name as logisticorderstatusname,
	b1.arrivedate, b1.totalamount, b1.cost as costto,
	b2.userid, b2.username as name, b4.postalcode as post,
	b3.province, c50.areaname as provincename,
	b3.city, c51.areaname as cityname,
	b3.borough as area, c52.areaname as areaname,
	b3.detailaddr as address, b5.phone as tel,
	b2.remark

FROM t_logisticmgr_outrorder a
LEFT JOIN t_logisticmgr_logisticorder b1
	ON a.id=b1.outorderid and b1.ordertype=1
LEFT JOIN t_aftersrv_return b2
	ON a.orderid=b2.id
LEFT JOIN t_clientmgr_address b3
	ON b2.userid=b3.clientid and defaultaddr=1
LEFT JOIN t_clientmgr_info b4
	ON b2.userid=b4.clientid
LEFT JOIN t_clientmgr_phone b5
	ON b2.userid=b3.clientid and defaultflag=1

LEFT JOIN t_base_orderstatus c3
	ON b2.status=c3.id and c3.status=1
LEFT JOIN t_base_area c50
	ON c50.areaid=b3.province and c50.areagrade=0
LEFT JOIN t_base_area c51
	ON c51.areaid=b3.city and c51.areagrade=1
LEFT JOIN t_base_area c52
	ON c52.areaid=b3.borough and c52.areagrade=2
LEFT JOIN t_base_orderstatus c31
	ON a.status=c31.id and c31.status=1
LEFT JOIN t_base_logisticstatus c41
	ON b1.status=c41.id and c41.status=1
;
--------------------------------------------------------
--  DDL for View V_LGST_RORDER_LIST
--------------------------------------------------------

  CREATE OR REPLACE VIEW "V_LGST_RORDER_LIST" ("COMPANYID", "CREATEDATE", "ID", "STATUS", "STATUSNAME", "NAME", "PROVINCE", "PROVINCENAME", "CITY", "CITYNAME", "AREA", "AREANAME", "AMOUNT") AS 
  SELECT a.companyid, a.indate as createdate, a.id,
	a.status, c3.name as statusname,
	a.username as name,
	b.province, c50.areaname as provincename,
	b.city, c51.areaname as cityname,
	b.borough as area, c52.areaname as areaname,
	a.goodstotalprice as amount
FROM t_aftersrv_return a
JOIN t_clientmgr_address b
	ON a.userid=b.clientid and defaultaddr=1
JOIN t_base_returnstatus c3
	ON a.status=c3.id and c3.status=1
JOIN t_base_area c50
	ON c50.areaid=b.province and c50.areagrade=0
JOIN t_base_area c51
	ON c51.areaid=b.city and c51.areagrade=1
JOIN t_base_area c52
	ON c52.areaid=b.borough and c52.areagrade=2
;
